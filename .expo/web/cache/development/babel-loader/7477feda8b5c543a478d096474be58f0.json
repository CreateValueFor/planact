{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getScheduleById = exports.default = void 0;\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _redux = require(\"redux\");\n\nvar _theme = _interopRequireDefault(require(\"./theme\"));\n\nvar _userSchedules = _interopRequireDefault(require(\"./userSchedules\"));\n\nvar rootReducer = (0, _redux.combineReducers)({\n  theme: _theme.default,\n  userSchedules: _userSchedules.default\n});\n\nvar _default = (0, _redux.createStore)(rootReducer);\n\nexports.default = _default;\n\nvar getScheduleById = function getScheduleById(schedule_id) {\n  var schedules = (0, _reactRedux.useSelector)(function (_ref) {\n    var userSchedules = _ref.userSchedules;\n    return userSchedules;\n  });\n  return schedules.find(function (schedule) {\n    return schedule.schedule_id == schedule_id;\n  });\n};\n\nexports.getScheduleById = getScheduleById;","map":{"version":3,"sources":["C:/Users/rjqnr/src/planact_test/src/modules/index.ts"],"names":["rootReducer","theme","userSchedules","getScheduleById","schedule_id","schedules","find","schedule"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAGA,IAAMA,WAAW,GAAG,4BAAgB;AAChCC,EAAAA,KAAK,EAALA,cADgC;AAEhCC,EAAAA,aAAa,EAAbA;AAFgC,CAAhB,CAApB;;eAKe,wBAAYF,WAAZ,C;;;;AAGR,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,WAAD,EAAwB;AACnD,MAAMC,SAAS,GAAG,6BAAY;AAAA,QAAEH,aAAF,QAAEA,aAAF;AAAA,WAAiCA,aAAjC;AAAA,GAAZ,CAAlB;AACA,SAAOG,SAAS,CAACC,IAAV,CAAe,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACH,WAAT,IAAwBA,WAA5B;AAAA,GAAvB,CAAP;AACH,CAHM","sourcesContent":["import { useSelector } from 'react-redux';\r\nimport { combineReducers, createStore } from 'redux';\r\nimport theme from './theme';\r\nimport userSchedules from './userSchedules';\r\n\r\n// 전체 Global State\r\nconst rootReducer = combineReducers({\r\n    theme,\r\n    userSchedules\r\n});\r\nexport type GlobalState = ReturnType<typeof rootReducer>;\r\nexport default createStore(rootReducer);\r\n\r\n\r\nexport const getScheduleById = (schedule_id:string) => {\r\n    const schedules = useSelector(({userSchedules}:GlobalState) => userSchedules);\r\n    return schedules.find(schedule => schedule.schedule_id == schedule_id);\r\n}\r\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _taggedTemplateLiteralLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteralLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _native = _interopRequireDefault(require(\"styled-components/native\"));\n\nvar _excluded = [\"content\", \"color\"];\n\nvar _templateObject,\n    _templateObject2,\n    _jsxFileName = \"/Users/sooyoung/Projects/Planact/src/materials/Button.tsx\";\n\nvar Button = _native.default.TouchableOpacity(_templateObject || (_templateObject = (0, _taggedTemplateLiteralLoose2.default)([\"\\n  \", \"\\n  \", \"\\n  border-width: .5;\\n  border-radius: 5;\\n  padding: 10px;\\n\"])), function (_ref) {\n  var theme = _ref.theme,\n      color = _ref.color;\n  var type = color ? theme[color] : theme.primary;\n  return \"\\n    background-color: \" + type.main + \";\\n    border-color: \" + type.border + \";\\n    \";\n}, function (_ref2) {\n  var disabled = _ref2.disabled;\n  return disabled ? \"opacity: 0.6;\" : \"\";\n});\n\nvar Content = _native.default.Text(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteralLoose2.default)([\"\\n  font-size: 20px;\\n  color: \", \";\\n\"])), function (_ref3) {\n  var theme = _ref3.theme,\n      color = _ref3.color;\n  return color ? theme[color].text : theme.primary.text;\n});\n\nvar StyledButton = function StyledButton(_ref4) {\n  var content = _ref4.content,\n      color = _ref4.color,\n      others = (0, _objectWithoutProperties2.default)(_ref4, _excluded);\n  return _react.default.createElement(Button, (0, _extends2.default)({\n    color: color\n  }, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(Content, {\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, content));\n};\n\nvar _default = StyledButton;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sooyoung/Projects/Planact/src/materials/Button.tsx"],"names":["Button","styled","TouchableOpacity","theme","color","type","primary","main","border","disabled","Content","Text","text","StyledButton","content","others"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;;;;;;;AAcA,IAAMA,MAAM,GAAGC,gBAAOC,gBAAV,uKACR,gBAAoB;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AACpB,MAAMC,IAAI,GAAGD,KAAK,GAAGD,KAAK,CAACC,KAAD,CAAR,GAAkBD,KAAK,CAACG,OAA1C;AACA,sCACoBD,IAAI,CAACE,IADzB,6BAEgBF,IAAI,CAACG,MAFrB;AAID,CAPS,EAQR;AAAA,MAAEC,QAAF,SAAEA,QAAF;AAAA,SAAgBA,QAAQ,GAAG,eAAH,GAAqB,EAA7C;AAAA,CARQ,CAAZ;;AAaA,IAAMC,OAAO,GAAGT,gBAAOU,IAAV,iIAEF;AAAA,MAAER,KAAF,SAAEA,KAAF;AAAA,MAASC,KAAT,SAASA,KAAT;AAAA,SAAoBA,KAAK,GAAGD,KAAK,CAACC,KAAD,CAAL,CAAaQ,IAAhB,GAAuBT,KAAK,CAACG,OAAN,CAAcM,IAA9D;AAAA,CAFE,CAAb;;AAMA,IAAMC,YAAY,GAAG,SAAfA,YAAe,QAAiD;AAAA,MAAvCC,OAAuC,SAAvCA,OAAuC;AAAA,MAA9BV,KAA8B,SAA9BA,KAA8B;AAAA,MAApBW,MAAoB;AACpE,SACE,6BAAC,MAAD;AAAQ,IAAA,KAAK,EAAEX;AAAf,KAA0BW,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,6BAAC,OAAD;AAAS,IAAA,KAAK,EAAEX,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,OADH,CADF,CADF;AAOD,CARD;;eASeD,Y","sourcesContent":["import React from 'react';\nimport { TouchableOpacityProps, TextProps } from 'react-native'\nimport styled from 'styled-components/native'\n\n\ninterface TOProps extends TouchableOpacityProps {\n  color?: \"primary\" | \"secondary\" | \"ghost\"\n  disabled?: boolean\n}\ninterface ContentProps extends TextProps{\n  color?: \"primary\" | \"secondary\" | \"ghost\"\n}\ninterface ButtonProps extends TOProps {\n  content: string\n}\n\nconst Button = styled.TouchableOpacity<TOProps>`\n  ${({theme, color}) => {\n    const type = color ? theme[color] : theme.primary;\n    return `\n    background-color: ${type.main};\n    border-color: ${type.border};\n    `\n  }}\n  ${({disabled}) => disabled ? \"opacity: 0.6;\" : \"\"}\n  border-width: .5;\n  border-radius: 5;\n  padding: 10px;\n`;\nconst Content = styled.Text<ContentProps>`\n  font-size: 20px;\n  color: ${({theme, color}) => color ? theme[color].text : theme.primary.text};\n`;\n\n\nconst StyledButton = function({content, color, ...others}:ButtonProps){\n  return(\n    <Button color={color} {...others}>\n      <Content color={color}>\n        {content}\n      </Content>\n    </Button>\n  )\n}\nexport default StyledButton;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.getDayType = void 0;\n\nvar _objectDestructuringEmpty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectDestructuringEmpty\"));\n\nvar _taggedTemplateLiteralLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteralLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _native = _interopRequireDefault(require(\"styled-components/native\"));\n\nvar _holidayKr = require(\"holiday-kr\");\n\nvar _templateObject,\n    _templateObject2,\n    _this = this,\n    _jsxFileName = \"/Users/sooyoung/Projects/Planact/src/components/Daily.tsx\";\n\nvar Container = _native.default.TouchableOpacity(_templateObject || (_templateObject = (0, _taggedTemplateLiteralLoose2.default)([\"\\n    width: 120;\\n    height: 120;\\n    padding: 10px;\\n    padding-top: 5px;\\n    border-radius: 15;\\n    border-width: .2;\\n    shadow-color: #000000;\\n    shadow-opacity: 0.8;\\n    shadow-radius: 2;\\n    elevation: 1;\\n\"])));\n\nvar DateText = _native.default.Text(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteralLoose2.default)([\"\\n    \", \"\\n\"])), function (_ref) {\n  var daytype = _ref.daytype;\n  if (daytype > 0) return \"color: \" + (daytype === 2 ? 'red' : 'blue') + \";\";\n});\n\nvar getDayType = function getDayType(date) {\n  var day = date.getDay();\n  if (day === 0 || (0, _holidayKr.isSolarHioliday)(day)) return 2;else return day === 6 ? 1 : 0;\n};\n\nexports.getDayType = getDayType;\n\nvar Daily = function Daily(_ref2) {\n  (0, _objectDestructuringEmpty2.default)(_ref2);\n  var date = daily_dummy.date,\n      events = daily_dummy.events;\n  return _react.default.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(DateText, {\n    daytype: (0, _holidayKr.isSolarHioliday)(date),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, date.getDate()));\n};\n\nvar daily_dummy = {\n  date: new Date(),\n  events: [{\n    dateof: 1,\n    title: \"런닝머신 30분\",\n    content: \"9km/h 5분 12km/h 5분 반복\",\n    icon: \"running\",\n    date: new Date(),\n    completed: false,\n    color: \"#ffbbbb\"\n  }, {\n    dateof: 1,\n    title: \"영단어 100개 암기\",\n    content: \"Toeic 영단어\",\n    icon: \"study\",\n    date: new Date(),\n    completed: false,\n    color: \"#bbbbff\"\n  }]\n};\nvar _default = Daily;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sooyoung/Projects/Planact/src/components/Daily.tsx"],"names":["Container","styled","TouchableOpacity","DateText","Text","daytype","getDayType","date","day","getDay","Daily","daily_dummy","events","getDate","Date","dateof","title","content","icon","completed","color"],"mappings":";;;;;;;;;;;AACA;;AACA;;AACA;;;;;;;AAEA,IAAMA,SAAS,GAAGC,gBAAOC,gBAAV,uTAAf;;AAgBA,IAAMC,QAAQ,GAAGF,gBAAOG,IAAV,uGACR,gBAAe;AAAA,MAAbC,OAAa,QAAbA,OAAa;AACb,MAAGA,OAAO,GAAG,CAAb,EACI,oBAAiBA,OAAO,KAAK,CAAZ,GAAgB,KAAhB,GAAwB,MAAzC;AACP,CAJS,CAAd;;AAOO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAe;AAErC,MAAMC,GAAG,GAAGD,IAAI,CAACE,MAAL,EAAZ;AACA,MAAGD,GAAG,KAAK,CAAR,IAAa,gCAAgBA,GAAhB,CAAhB,EACI,OAAO,CAAP,CADJ,KAGI,OAAOA,GAAG,KAAK,CAAR,GAAY,CAAZ,GAAgB,CAAvB;AACP,CAPM;;;;AAQP,IAAME,KAAK,GAAG,SAARA,KAAQ,QAAQ;AAAA;AAClB,MAAOH,IAAP,GAAkCI,WAAlC,CAAOJ,IAAP;AAAA,MAAaK,MAAb,GAAkCD,WAAlC,CAAaC,MAAb;AACA,SACI,6BAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,QAAD;AAAU,IAAA,OAAO,EAAE,gCAAgBL,IAAhB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IAAI,CAACM,OAAL,EADL,CADJ,CADJ;AAOH,CATD;;AAWA,IAAMF,WAAsB,GAAG;AAC3BJ,EAAAA,IAAI,EAAE,IAAIO,IAAJ,EADqB;AAE3BF,EAAAA,MAAM,EAAC,CACP;AACIG,IAAAA,MAAM,EAAE,CADZ;AAEIC,IAAAA,KAAK,EAAE,UAFX;AAGIC,IAAAA,OAAO,EAAE,uBAHb;AAIIC,IAAAA,IAAI,EAAE,SAJV;AAKIX,IAAAA,IAAI,EAAE,IAAIO,IAAJ,EALV;AAMIK,IAAAA,SAAS,EAAE,KANf;AAOIC,IAAAA,KAAK,EAAE;AAPX,GADO,EAUP;AACIL,IAAAA,MAAM,EAAE,CADZ;AAEIC,IAAAA,KAAK,EAAE,aAFX;AAGIC,IAAAA,OAAO,EAAE,WAHb;AAIIC,IAAAA,IAAI,EAAE,OAJV;AAKIX,IAAAA,IAAI,EAAE,IAAIO,IAAJ,EALV;AAMIK,IAAAA,SAAS,EAAE,KANf;AAOIC,IAAAA,KAAK,EAAE;AAPX,GAVO;AAFoB,CAA/B;eAwBeV,K","sourcesContent":["import { DailyProps } from '@/utils/data';\nimport React from 'react';\nimport styled from 'styled-components/native';\nimport {isSolarHioliday} from 'holiday-kr';\n\nconst Container = styled.TouchableOpacity`\n    width: 120;\n    height: 120;\n    padding: 10px;\n    padding-top: 5px;\n    border-radius: 15;\n    border-width: .2;\n    shadow-color: #000000;\n    shadow-opacity: 0.8;\n    shadow-radius: 2;\n    elevation: 1;\n`\n\ninterface DateTextProps {\n    daytype: 0 | 1 | 2;\n}\nconst DateText = styled.Text<DateTextProps>`\n    ${({daytype}) => {\n        if(daytype > 0)\n            return `color: ${daytype === 2 ? 'red' : 'blue'};`\n    }}\n`;\n\nexport const getDayType = (date:Date) => {\n    // 0 : 평일 , 1: 토요일, 2: 일요일, 공휴일\n    const day = date.getDay();\n    if(day === 0 || isSolarHioliday(day))\n        return 2;\n    else\n        return day === 6 ? 1 : 0;\n}\nconst Daily = ({}) => {\n    const {date, events}:DailyProps = daily_dummy;\n    return (\n        <Container>\n            <DateText daytype={isSolarHioliday(date)}>\n                {date.getDate()}\n            </DateText>\n        </Container>\n    )\n}\n\nconst daily_dummy:DailyProps = {\n    date: new Date(),\n    events:[\n    {\n        dateof: 1,\n        title: \"런닝머신 30분\",\n        content: \"9km/h 5분 12km/h 5분 반복\",\n        icon: \"running\",\n        date: new Date(),\n        completed: false,\n        color: \"#ffbbbb\"\n    },\n    {\n        dateof: 1,\n        title: \"영단어 100개 암기\",\n        content: \"Toeic 영단어\",\n        icon: \"study\",\n        date: new Date(),\n        completed: false,\n        color: \"#bbbbff\"\n    },\n    ]\n}\n\nexport default Daily;"]},"metadata":{},"sourceType":"script"}
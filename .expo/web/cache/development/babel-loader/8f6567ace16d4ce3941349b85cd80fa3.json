{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectDestructuringEmpty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectDestructuringEmpty\"));\n\nvar _Input = require(\"../../components/Input\");\n\nvar _TouchableView = require(\"../../components/TouchableView\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _vectorIcons = require(\"@expo/vector-icons\");\n\nvar _MarketPrograms = require(\"../../db/market/MarketPrograms\");\n\nvar _PlanSearch = _interopRequireDefault(require(\"./PlanSearch\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\rjqnr\\\\src\\\\planact_test\\\\src\\\\screens\\\\market\\\\Market.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction Market(_ref) {\n  var _this = this;\n\n  (0, _objectDestructuringEmpty2.default)(_ref);\n  var theme = (0, _reactRedux.useSelector)(function (_ref2) {\n    var theme = _ref2.theme;\n    return theme;\n  });\n\n  var _styles = styles(theme),\n      img = _styles.img,\n      item = _styles.item,\n      body = _styles.body,\n      search = _styles.search,\n      input = _styles.input;\n\n  var _useState = (0, _react.useState)(\"\"),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      text = _useState2[0],\n      onChangeText = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var ModalOpen = function ModalOpen() {\n    setModalVisible(function (prev) {\n      return !prev;\n    });\n  };\n\n  return _react.default.createElement(_reactNative.SafeAreaView, {\n    style: body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      _reactNative.Alert.alert(\"Modal has been closed.\");\n\n      ModalOpen();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"rgba(0,0,0,.3)\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      backgroundColor: '#fff',\n      width: 100,\n      height: 100,\n      borderRadius: 18,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, \"Modal Test\"), _react.default.createElement(_TouchableView.TouchableView, {\n    onPress: ModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"close\"))))), _react.default.createElement(_reactNative.View, {\n    style: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_PlanSearch.default, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_Input.InputView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_TouchableView.TouchableView, {\n    onPress: ModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_vectorIcons.AntDesign, {\n    name: \"filter\",\n    size: 24,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }))), _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, _MarketPrograms.programs_dummy.map(function (plan, idx) {\n    return _react.default.createElement(_reactNative.View, {\n      style: item,\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, _react.default.createElement(_reactNative.Image, {\n      style: img,\n      source: require(\"../../assets/img/health.jpg\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), _react.default.createElement(_reactNative.View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }\n    }, plan.program_name), _react.default.createElement(_reactNative.Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }\n    }, plan.description)));\n  })));\n}\n\nvar styles = function styles(theme) {\n  return _reactNative.StyleSheet.create({\n    body: {\n      flex: 1,\n      backgroundColor: theme.mainBackground,\n      padding: 5\n    },\n    search: {\n      backgroundColor: theme.mainBackground,\n      height: 50,\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginBottom: 10\n    },\n    input: {\n      flex: 1\n    },\n    item: {\n      borderWidth: 1,\n      borderColor: 'black',\n      marginBottom: 10,\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    itemText: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    img: {\n      height: 100,\n      width: 100,\n      marginRight: 10\n    }\n  });\n};\n\nvar _default = Market;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/rjqnr/src/planact_test/src/screens/market/Market.tsx"],"names":["Market","theme","styles","img","item","body","search","input","text","onChangeText","modalVisible","setModalVisible","ModalOpen","prev","Alert","alert","flex","backgroundColor","alignItems","justifyContent","width","height","borderRadius","padding","programs_dummy","map","plan","idx","require","program_name","description","StyleSheet","create","mainBackground","flexDirection","marginBottom","borderWidth","borderColor","display","itemText","flexWrap","marginRight"],"mappings":"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","sourcesContent":["import { InputView } from \"@/components/Input\";\r\nimport { TouchableView } from \"@/components/TouchableView\";\r\nimport { GlobalState } from \"@/modules\";\r\nimport { DefaultTheme } from \"@/style/styled\";\r\nimport React, { useState } from \"react\";\r\nimport { Alert, TextInput } from \"react-native\";\r\nimport { Modal, StyleSheet, View, Text,SafeAreaView } from \"react-native\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { programs_dummy } from \"@/db/market/MarketPrograms\";\r\nimport { Image } from \"react-native\";\r\nimport PlanSearch from \"./PlanSearch\";\r\ninterface MarketProps {\r\n\r\n}\r\nfunction Market({}:MarketProps){\r\n    const theme = useSelector(({theme}:GlobalState) => theme)\r\n    const {img, item, body, search, input} = styles(theme);\r\n    const [text, onChangeText] = useState(\"\");\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n\r\n    const ModalOpen = () => {\r\n      setModalVisible(prev => !prev)\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={body}>\r\n            <Modal\r\n              animationType=\"slide\"\r\n              transparent={true}\r\n              visible={modalVisible}\r\n              onRequestClose={()=>{\r\n                Alert.alert(\"Modal has been closed.\");\r\n                ModalOpen()\r\n              }}\r\n            >\r\n              <View style={{flex:1, backgroundColor:\"rgba(0,0,0,.3)\", alignItems:\"center\",justifyContent:\"center\"}}>\r\n                <View style={{backgroundColor:'#fff', width:100,height:100,borderRadius:18,padding: 10}}>\r\n                  <Text>Modal Test</Text>\r\n                  <TouchableView onPress={ModalOpen}>\r\n                    <Text>close</Text>\r\n                    </TouchableView>\r\n                </View>\r\n              </View>\r\n            </Modal>\r\n            \r\n            <View style={search}>\r\n                <PlanSearch/>\r\n                <InputView/>\r\n                <TouchableView onPress={ModalOpen}>\r\n                  <AntDesign name=\"filter\" size={24} color=\"black\" />\r\n                </TouchableView>\r\n            </View>\r\n            <View>\r\n              {/* 데이터는 AXIOS로 받아올 것이기 때문에 비동기 함수로 데이터를 받아올 것임.\r\n                따라서 programs 데이터는 useState<IPrograms[]>([]) 활용해서 State로 선언해야 하고,\r\n                useEffect 활용해서 데이터 받아올 것. 데이터 받아오는 동안은 로딩 화면이 나타나야 하니\r\n                loading이라는 state 선언해서 데이터 받아오는 동안에는 로딩 화면 나타날 수 있도록.\r\n              */}\r\n                {programs_dummy.map((plan, idx)=> (\r\n                  <View style={item} key={idx}>\r\n                    <Image \r\n                      // source={require(`${plan.photoUrl}`)}\r\n                      style={img}\r\n                      source={require('../../assets/img/health.jpg')}\r\n                    />\r\n                    <View>\r\n                      <Text>{plan.program_name}</Text>\r\n                      <Text>{plan.description}</Text>\r\n                      {/* 이거 어떻게 처리하지 */}\r\n                    </View>\r\n                  </View>\r\n                ))}\r\n                {/* <FlatList\r\n                  data={programs_dummy.plans}\r\n                  renderItem={})=>{\r\n\r\n                  }\r\n                /> */}\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = (theme:DefaultTheme) => {\r\n    return StyleSheet.create({\r\n        body:{\r\n          flex:1,\r\n          backgroundColor: theme.mainBackground,\r\n          padding: 5\r\n        },\r\n        search:{\r\n          backgroundColor: theme.mainBackground,\r\n          height: 50,\r\n          flexDirection:'row',\r\n          alignItems:'center',\r\n          marginBottom:10,\r\n        },\r\n        input:{\r\n          flex:1\r\n        },\r\n        item:{\r\n          borderWidth: 1,\r\n          borderColor: 'black',\r\n          marginBottom: 10,\r\n          display:'flex',\r\n          flexDirection:'row',\r\n\r\n        },\r\n        itemText:{\r\n          display:'flex',\r\n          flexWrap:'wrap',\r\n          \r\n        },\r\n        img:{\r\n          height: 100,\r\n          width: 100,\r\n          marginRight: 10\r\n        }\r\n\r\n    })\r\n}\r\n\r\nexport default Market;\r\n\r\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _modules = require(\"../../modules\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\rjqnr\\\\src\\\\planact_test\\\\src\\\\screens\\\\home\\\\EventView.tsx\";\n\nfunction EventView(props) {\n  var abb = props.abb,\n      title = props.title,\n      schedule_id = props.schedule_id;\n  var theme = (0, _reactRedux.useSelector)(function (state) {\n    return state.theme;\n  });\n  var schedule = (0, _modules.getScheduleById)(schedule_id);\n  var color = (schedule == null ? void 0 : schedule.color) || \"#333\";\n\n  var _styles = styles(theme, {\n    color: color\n  }),\n      container = _styles.container,\n      iconContainer = _styles.iconContainer,\n      icon = _styles.icon,\n      contentWrapper = _styles.contentWrapper,\n      content = _styles.content;\n\n  return _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: iconContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: contentWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, abb)));\n}\n\nvar styles = function styles(theme, _ref) {\n  var color = _ref.color;\n  var content = theme.content,\n      text = theme.text;\n  return _reactNative.StyleSheet.create({\n    container: {\n      backgroundColor: content,\n      height: 20,\n      flexDirection: 'row'\n    },\n    iconContainer: {\n      flex: 1,\n      paddingTop: 2.5,\n      paddingBottom: 3.5,\n      paddingLeft: 3,\n      paddingRight: 5\n    },\n    icon: {\n      backgroundColor: color,\n      flex: 1,\n      borderRadius: 50\n    },\n    contentWrapper: {\n      flex: 6\n    },\n    content: {\n      color: text\n    }\n  });\n};\n\nvar _default = EventView;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/rjqnr/src/planact_test/src/screens/home/EventView.tsx"],"names":["EventView","props","abb","title","schedule_id","theme","state","schedule","color","styles","container","iconContainer","icon","contentWrapper","content","text","StyleSheet","create","backgroundColor","height","flexDirection","flex","paddingTop","paddingBottom","paddingLeft","paddingRight","borderRadius"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AACA;;;;AAMA,SAASA,SAAT,CAAoBC,KAApB,EAAyC;AACrC,MAAOC,GAAP,GAAkCD,KAAlC,CAAOC,GAAP;AAAA,MAAYC,KAAZ,GAAkCF,KAAlC,CAAYE,KAAZ;AAAA,MAAmBC,WAAnB,GAAkCH,KAAlC,CAAmBG,WAAnB;AACA,MAAMC,KAAK,GAAG,6BAAY,UAACC,KAAD;AAAA,WAAuBA,KAAK,CAACD,KAA7B;AAAA,GAAZ,CAAd;AACA,MAAME,QAAQ,GAAG,8BAAgBH,WAAhB,CAAjB;AACA,MAAMI,KAAK,GAAG,CAAAD,QAAQ,QAAR,YAAAA,QAAQ,CAAEC,KAAV,KAAmB,MAAjC;;AACA,gBAAkEC,MAAM,CAACJ,KAAD,EAAQ;AAACG,IAAAA,KAAK,EAALA;AAAD,GAAR,CAAxE;AAAA,MAAOE,SAAP,WAAOA,SAAP;AAAA,MAAkBC,aAAlB,WAAkBA,aAAlB;AAAA,MAAiCC,IAAjC,WAAiCA,IAAjC;AAAA,MAAuCC,cAAvC,WAAuCA,cAAvC;AAAA,MAAuDC,OAAvD,WAAuDA,OAAvD;;AACA,SACI,6BAAC,6BAAD;AAAkB,IAAA,KAAK,EAAEJ,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,GADL,CADJ,CAJJ,CADJ;AAYH;;AAKD,IAAMO,MAAM,GAAG,SAATA,MAAS,CAACJ,KAAD,QAAsD;AAAA,MAAhCG,KAAgC,QAAhCA,KAAgC;AACjE,MAAOM,OAAP,GAAwBT,KAAxB,CAAOS,OAAP;AAAA,MAAgBC,IAAhB,GAAwBV,KAAxB,CAAgBU,IAAhB;AACA,SAAOC,wBAAWC,MAAX,CAAkB;AACrBP,IAAAA,SAAS,EAAC;AACNQ,MAAAA,eAAe,EAAEJ,OADX;AAENK,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,aAAa,EAAE;AAHT,KADW;AAMrBT,IAAAA,aAAa,EAAE;AACXU,MAAAA,IAAI,EAAE,CADK;AAEXC,MAAAA,UAAU,EAAE,GAFD;AAGXC,MAAAA,aAAa,EAAE,GAHJ;AAIXC,MAAAA,WAAW,EAAE,CAJF;AAKXC,MAAAA,YAAY,EAAE;AALH,KANM;AAarBb,IAAAA,IAAI,EAAE;AACFM,MAAAA,eAAe,EAAEV,KADf;AAEFa,MAAAA,IAAI,EAAE,CAFJ;AAGFK,MAAAA,YAAY,EAAE;AAHZ,KAbe;AAkBrBb,IAAAA,cAAc,EAAE;AACZQ,MAAAA,IAAI,EAAC;AADO,KAlBK;AAqBrBP,IAAAA,OAAO,EAAE;AACLN,MAAAA,KAAK,EAAEO;AADF;AArBY,GAAlB,CAAP;AAyBH,CA3BD;;eA6Bef,S","sourcesContent":["import React from 'react'; \r\nimport { IUserEvent } from '@/utils/data';\r\nimport { TouchableOpacity, View, Text, StyleSheet, Alert } from 'react-native';\r\nimport { DefaultTheme } from '@/style/styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { getScheduleById, GlobalState } from '@modules/index';\r\n\r\ninterface EventViewProps extends IUserEvent {\r\n \r\n}\r\n\r\nfunction EventView (props:EventViewProps){\r\n    const {abb, title, schedule_id} = props;\r\n    const theme = useSelector((state:GlobalState) => state.theme);\r\n    const schedule = getScheduleById(schedule_id);\r\n    const color = schedule?.color || \"#333\";\r\n    const {container, iconContainer, icon, contentWrapper, content} = styles(theme, {color});\r\n    return(\r\n        <TouchableOpacity style={container}  >\r\n            <View style={iconContainer}>\r\n                <View style={icon} />\r\n            </View>\r\n            <View style={contentWrapper}>\r\n                <Text style={content}>\r\n                    {abb}\r\n                </Text>\r\n            </View>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\ninterface EventViewStyleProps {\r\n    color: string\r\n}\r\nconst styles = (theme:DefaultTheme, {color}:EventViewStyleProps) =>  {\r\n    const {content, text} = theme;\r\n    return StyleSheet.create({\r\n        container:{\r\n            backgroundColor: content,\r\n            height: 20,\r\n            flexDirection: 'row'\r\n        },\r\n        iconContainer: {\r\n            flex: 1,\r\n            paddingTop: 2.5,\r\n            paddingBottom: 3.5,\r\n            paddingLeft: 3,\r\n            paddingRight: 5\r\n        },\r\n        icon: {\r\n            backgroundColor: color,\r\n            flex: 1,\r\n            borderRadius: 50,\r\n        },\r\n        contentWrapper: {\r\n            flex:6\r\n        },\r\n        content: {\r\n            color: text\r\n        }\r\n  })\r\n};\r\n\r\nexport default EventView;"]},"metadata":{},"sourceType":"script"}
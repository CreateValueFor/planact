{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _TouchableView = require(\"../../components/TouchableView\");\n\nvar _MarketSchedules = require(\"../../db/market/MarketSchedules\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\rjqnr\\\\src\\\\planact_test\\\\src\\\\screens\\\\market\\\\Schedule.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction Schedule(_ref) {\n  var programId = _ref.programId,\n      onPress = _ref.onPress;\n  var theme = (0, _reactRedux.useSelector)(function (_ref2) {\n    var theme = _ref2.theme;\n    return theme;\n  });\n\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      schedules = _useState2[0],\n      setSchedules = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(true),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  (0, _react.useEffect)(function () {\n    (function _callee() {\n      var newSchedules;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap((0, _MarketSchedules.getMarketSchedules)(programId));\n\n            case 2:\n              newSchedules = _context.sent;\n              setSchedules(newSchedules);\n              setIsLoading(false);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return _react.default.createElement(_reactNative.Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Hello\"), _react.default.createElement(_TouchableView.TouchableView, {\n    onPress: onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"close\")));\n}\n\nvar _default = Schedule;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/rjqnr/src/planact_test/src/screens/market/Schedule.tsx"],"names":["Schedule","programId","onPress","theme","schedules","setSchedules","isLoading","setIsLoading","newSchedules"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAGA;;AAEA;;AACA;;;;;;;;AAOA,SAASA,QAAT,OAAyD;AAAA,MAArCC,SAAqC,QAArCA,SAAqC;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AACvD,MAAMC,KAAK,GAAG,6BAAY;AAAA,QAAGA,KAAH,SAAGA,KAAH;AAAA,WAA4BA,KAA5B;AAAA,GAAZ,CAAd;;AACA,kBAAkC,qBAAsB,EAAtB,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAkC,qBAAS,IAAT,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,wBAAU,YAAM;AACd,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAEyC,yCAAmBN,SAAnB,CAFzC;;AAAA;AAEOO,cAAAA,YAFP;AAGCH,cAAAA,YAAY,CAACG,YAAD,CAAZ;AACAD,cAAAA,YAAY,CAAC,KAAD,CAAZ;;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAKK,GANP,EAOC,EAPD;AAQA,SACE,6BAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,6BAAC,4BAAD;AAAe,IAAA,OAAO,EAAEL,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAFF,CADF;AAQD;;eAEcF,Q","sourcesContent":["import { TouchableView } from '@/components/TouchableView'\r\nimport { getMarketSchedules } from '@/db/market/MarketSchedules'\r\nimport { GlobalState } from '@/modules'\r\nimport { ISchedule } from '@/utils/data'\r\nimport React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { Modal, View, Text } from 'react-native'\r\nimport { useSelector } from 'react-redux'\r\n\r\ninterface ScheduleProps {\r\n  programId: String\r\n  onPress: any\r\n}\r\n\r\nfunction Schedule({ programId, onPress }: ScheduleProps) {\r\n  const theme = useSelector(({ theme }: GlobalState) => theme)\r\n  const [schedules, setSchedules] = useState<ISchedule[]>([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  //prettier-ignore\r\n  useEffect(() => {\r\n    (async () => {\r\n      //Fetch Programs\r\n      const newSchedules: ISchedule[] = await getMarketSchedules(programId)\r\n      setSchedules(newSchedules)\r\n      setIsLoading(false)\r\n    })()}\r\n  ,[])\r\n  return (\r\n    <Modal>\r\n      <Text>Hello</Text>\r\n      <TouchableView onPress={onPress}>\r\n        <Text>close</Text>\r\n      </TouchableView>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Schedule\r\n"]},"metadata":{},"sourceType":"script"}
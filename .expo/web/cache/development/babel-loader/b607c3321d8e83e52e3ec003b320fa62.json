{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectDestructuringEmpty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectDestructuringEmpty\"));\n\nvar _TouchableView = require(\"../../components/TouchableView\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _MarketPrograms = require(\"../../db/market/MarketPrograms\");\n\nvar _PlanSearch = _interopRequireDefault(require(\"./PlanSearch\"));\n\nvar _PlanList = _interopRequireDefault(require(\"./PlanList\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\rjqnr\\\\src\\\\planact_test\\\\src\\\\screens\\\\market\\\\Market.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction Market(_ref) {\n  (0, _objectDestructuringEmpty2.default)(_ref);\n  var theme = (0, _reactRedux.useSelector)(function (_ref2) {\n    var theme = _ref2.theme;\n    return theme;\n  });\n\n  var _styles = styles(theme),\n      img = _styles.img,\n      item = _styles.item,\n      body = _styles.body,\n      search = _styles.search,\n      input = _styles.input;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      programs = _useState4[0],\n      setPrograms = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(true),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var ModalOpen = function ModalOpen() {\n    setModalVisible(function (prev) {\n      return !prev;\n    });\n  };\n\n  (0, _react.useEffect)(function () {\n    (function _callee() {\n      var newPrograms;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap((0, _MarketPrograms.getMarketPrograms)());\n\n            case 2:\n              newPrograms = _context.sent;\n              setPrograms(newPrograms);\n              setIsLoading(false);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return _react.default.createElement(_reactNative.SafeAreaView, {\n    style: body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      _reactNative.Alert.alert('Modal has been closed.');\n\n      ModalOpen();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'rgba(0,0,0,.3)',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      backgroundColor: '#fff',\n      width: 100,\n      height: 100,\n      borderRadius: 18,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Modal Test\"), _react.default.createElement(_TouchableView.TouchableView, {\n    onPress: ModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"close\"))))), _react.default.createElement(_PlanSearch.default, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_PlanList.default, {\n    data: programs,\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = function styles(theme) {\n  var content = theme.content,\n      text = theme.text;\n  return _reactNative.StyleSheet.create({\n    body: {\n      flex: 1,\n      backgroundColor: theme.mainBackground,\n      padding: 5\n    },\n    search: {\n      backgroundColor: theme.mainBackground,\n      height: 50,\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginBottom: 10\n    },\n    input: {\n      flex: 1\n    },\n    item: {\n      borderWidth: 1,\n      borderColor: 'black',\n      marginBottom: 10,\n      display: 'flex',\n      flexDirection: 'row',\n      backgroundColor: content\n    },\n    itemText: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    img: {\n      height: 100,\n      width: 100,\n      marginRight: 10\n    }\n  });\n};\n\nvar _default = Market;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/rjqnr/src/planact_test/src/screens/market/Market.tsx"],"names":["Market","theme","styles","img","item","body","search","input","modalVisible","setModalVisible","programs","setPrograms","isLoading","setIsLoading","ModalOpen","prev","newPrograms","Alert","alert","flex","backgroundColor","alignItems","justifyContent","width","height","borderRadius","padding","content","text","StyleSheet","create","mainBackground","flexDirection","marginBottom","borderWidth","borderColor","display","itemText","flexWrap","marginRight"],"mappings":"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","sourcesContent":["import { InputView } from '@/components/Input'\r\nimport { TouchableView } from '@/components/TouchableView'\r\nimport { GlobalState } from '@/modules'\r\nimport { DefaultTheme } from '@/style/styled'\r\nimport React, { useState } from 'react'\r\nimport { Alert, TextInput } from 'react-native'\r\nimport { Modal, StyleSheet, View, Text, SafeAreaView } from 'react-native'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getMarketPrograms, programs_dummy } from '@/db/market/MarketPrograms'\r\nimport PlanSearch from './PlanSearch'\r\nimport { IProgram } from '@/utils/data'\r\nimport { useEffect } from 'react'\r\nimport { FlatList } from 'react-native'\r\nimport PlanList from './PlanList'\r\ninterface MarketProps {}\r\nfunction Market({}: MarketProps) {\r\n  const theme = useSelector(({ theme }: GlobalState) => theme)\r\n  const { img, item, body, search, input } = styles(theme)\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [programs, setPrograms] = useState<IProgram[]>([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const ModalOpen = () => {\r\n    setModalVisible((prev) => !prev)\r\n  }\r\n  //prettier-ignore\r\n  useEffect(() => {\r\n    (async () => {\r\n      //Fetch Programs\r\n      const newPrograms: IProgram[] = await getMarketPrograms()\r\n      setPrograms(newPrograms)\r\n      setIsLoading(false)\r\n      \r\n    })()}\r\n  ,[])\r\n\r\n  return (\r\n    <SafeAreaView style={body}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          Alert.alert('Modal has been closed.')\r\n          ModalOpen()\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            backgroundColor: 'rgba(0,0,0,.3)',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              backgroundColor: '#fff',\r\n              width: 100,\r\n              height: 100,\r\n              borderRadius: 18,\r\n              padding: 10,\r\n            }}\r\n          >\r\n            <Text>Modal Test</Text>\r\n            <TouchableView onPress={ModalOpen}>\r\n              <Text>close</Text>\r\n            </TouchableView>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      <PlanSearch />\r\n      <View>\r\n        {/* 데이터는 AXIOS로 받아올 것이기 때문에 비동기 함수로 데이터를 받아올 것임.\r\n                따라서 programs 데이터는 useState<IPrograms[]>([]) 활용해서 State로 선언해야 하고,\r\n                useEffect 활용해서 데이터 받아올 것. 데이터 받아오는 동안은 로딩 화면이 나타나야 하니\r\n                loading이라는 state 선언해서 데이터 받아오는 동안에는 로딩 화면 나타날 수 있도록.\r\n              */}\r\n        <PlanList data={programs} isLoading={isLoading} />\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = (theme: DefaultTheme) => {\r\n  const { content, text } = theme\r\n  return StyleSheet.create({\r\n    body: {\r\n      flex: 1,\r\n      backgroundColor: theme.mainBackground,\r\n      padding: 5,\r\n    },\r\n    search: {\r\n      backgroundColor: theme.mainBackground,\r\n      height: 50,\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      marginBottom: 10,\r\n    },\r\n    input: {\r\n      flex: 1,\r\n    },\r\n    item: {\r\n      borderWidth: 1,\r\n      borderColor: 'black',\r\n      marginBottom: 10,\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      backgroundColor: content,\r\n    },\r\n    itemText: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    img: {\r\n      height: 100,\r\n      width: 100,\r\n      marginRight: 10,\r\n    },\r\n  })\r\n}\r\n\r\nexport default Market\r\n"]},"metadata":{},"sourceType":"script"}
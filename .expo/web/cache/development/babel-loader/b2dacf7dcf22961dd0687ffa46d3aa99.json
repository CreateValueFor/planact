{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _DefaultText = require(\"../../components/DefaultText\");\n\nvar _TouchableView = require(\"../../components/TouchableView\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\rjqnr\\\\src\\\\planact_test\\\\src\\\\screens\\\\market\\\\Program.tsx\";\n\nfunction Program(_ref) {\n  var _this = this;\n\n  var data = _ref.data,\n      isLoading = _ref.isLoading;\n  var theme = (0, _reactRedux.useSelector)(function (_ref2) {\n    var theme = _ref2.theme;\n    return theme;\n  });\n\n  var _styles = styles(theme),\n      programStyle = _styles.programStyle,\n      body = _styles.body,\n      test = _styles.test;\n\n  var renderPrograms = function renderPrograms(_ref3) {\n    var item = _ref3.item;\n    if (isLoading) return _react.default.createElement(_reactNative.Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 27\n      }\n    }, \"loading...\");\n\n    var _onPress = function onPress(id, e) {\n      console.log(id);\n    };\n\n    return _react.default.createElement(_TouchableView.TouchableView, {\n      onPress: function onPress(e) {\n        _onPress(item.program_id, e);\n      },\n      viewStyle: programStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_DefaultText.AccentText, {\n      text: item.program_name,\n      textStyle: test,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), _react.default.createElement(_DefaultText.DetailText, {\n      text: item.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), _react.default.createElement(_reactNative.Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, item.price));\n  };\n\n  return _react.default.createElement(_reactNative.FlatList, {\n    data: data,\n    renderItem: renderPrograms,\n    keyExtractor: function keyExtractor(item) {\n      return item.program_id;\n    },\n    style: body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  });\n}\n\nvar styles = function styles(theme) {\n  var content = theme.content,\n      text = theme.text,\n      mainBackground = theme.mainBackground;\n  return _reactNative.StyleSheet.create({\n    body: {\n      padding: 5\n    },\n    programStyle: {\n      backgroundColor: content,\n      height: 100,\n      marginBottom: 10\n    },\n    test: {\n      fontSize: 100\n    }\n  });\n};\n\nvar _default = Program;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/rjqnr/src/planact_test/src/screens/market/Program.tsx"],"names":["Program","data","isLoading","theme","styles","programStyle","body","test","renderPrograms","item","onPress","id","e","console","log","program_id","program_name","description","price","content","text","mainBackground","StyleSheet","create","padding","backgroundColor","height","marginBottom","fontSize"],"mappings":";;;;;;;AAAA;;AACA;;AAIA;;AACA;;AAEA;;;;AAOA,SAASA,OAAT,OAAoD;AAAA;;AAAA,MAAjCC,IAAiC,QAAjCA,IAAiC;AAAA,MAA3BC,SAA2B,QAA3BA,SAA2B;AAElD,MAAMC,KAAK,GAAG,6BAAY;AAAA,QAAGA,KAAH,SAAGA,KAAH;AAAA,WAA4BA,KAA5B;AAAA,GAAZ,CAAd;;AACA,gBAAqCC,MAAM,CAACD,KAAD,CAA3C;AAAA,MAAQE,YAAR,WAAQA,YAAR;AAAA,MAAsBC,IAAtB,WAAsBA,IAAtB;AAAA,MAA4BC,IAA5B,WAA4BA,IAA5B;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,QAAc;AAAA,QAAXC,IAAW,SAAXA,IAAW;AACnC,QAAIP,SAAJ,EAAe,OAAO,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;;AAEf,QAAMQ,QAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAKC,CAAL,EAAW;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACH,KAFC;;AAGA,WACE,6BAAC,4BAAD;AACE,MAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AACdF,QAAAA,QAAO,CAACD,IAAI,CAACM,UAAN,EAAkBH,CAAlB,CAAP;AACD,OAHH;AAIE,MAAA,SAAS,EAAEP,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,6BAAC,uBAAD;AAAY,MAAA,IAAI,EAAEI,IAAI,CAACO,YAAvB;AAAqC,MAAA,SAAS,EAAET,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,6BAAC,uBAAD;AAAY,MAAA,IAAI,EAAEE,IAAI,CAACQ,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOR,IAAI,CAACS,KAAZ,CARF,CADF;AAYD,GAlBD;;AAmBA,SACE,6BAAC,qBAAD;AACE,IAAA,IAAI,EAAEjB,IADR;AAEE,IAAA,UAAU,EAAEO,cAFd;AAGE,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUA,IAAI,CAACM,UAAf;AAAA,KAHhB;AAIE,IAAA,KAAK,EAAET,IAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD;;AAED,IAAMF,MAAM,GAAG,SAATA,MAAS,CAACD,KAAD,EAAyB;AACtC,MAAQgB,OAAR,GAA0ChB,KAA1C,CAAQgB,OAAR;AAAA,MAAiBC,IAAjB,GAA0CjB,KAA1C,CAAiBiB,IAAjB;AAAA,MAAuBC,cAAvB,GAA0ClB,KAA1C,CAAuBkB,cAAvB;AACA,SAAOC,wBAAWC,MAAX,CAAkB;AACvBjB,IAAAA,IAAI,EAAE;AACJkB,MAAAA,OAAO,EAAE;AADL,KADiB;AAIvBnB,IAAAA,YAAY,EAAE;AACZoB,MAAAA,eAAe,EAAEN,OADL;AAEZO,MAAAA,MAAM,EAAE,GAFI;AAGZC,MAAAA,YAAY,EAAE;AAHF,KAJS;AASvBpB,IAAAA,IAAI,EAAE;AACJqB,MAAAA,QAAQ,EAAE;AADN;AATiB,GAAlB,CAAP;AAaD,CAfD;;eAiBe5B,O","sourcesContent":["import { AccentText, DetailText } from '@/components/DefaultText'\r\nimport { TouchableView } from '@/components/TouchableView'\r\nimport { GlobalState } from '@/modules'\r\nimport { DefaultTheme } from '@/style/styled'\r\nimport { IProgram } from '@/utils/data'\r\nimport React from 'react'\r\nimport { StyleSheet, Text } from 'react-native'\r\nimport { FlatList, View } from 'react-native'\r\nimport { useSelector } from 'react-redux'\r\n\r\ninterface ProgramProps {\r\n  data: IProgram[]\r\n  isLoading: Boolean\r\n}\r\n\r\nfunction Program({ data, isLoading }: ProgramProps) {\r\n  //스타일 설정\r\n  const theme = useSelector(({ theme }: GlobalState) => theme)\r\n  const { programStyle, body, test } = styles(theme)\r\n  //flatlist renderItem 함수\r\n  const renderPrograms = ({ item }) => {\r\n    if (isLoading) return <Text>loading...</Text>\r\n    //prettier-ignore\r\n    const onPress = (id, e) => {\r\n      console.log(id)\r\n  }\r\n    return (\r\n      <TouchableView\r\n        onPress={(e) => {\r\n          onPress(item.program_id, e)\r\n        }}\r\n        viewStyle={programStyle}\r\n      >\r\n        <AccentText text={item.program_name} textStyle={test} />\r\n        <DetailText text={item.description} />\r\n        <Text>{item.price}</Text>\r\n      </TouchableView>\r\n    )\r\n  }\r\n  return (\r\n    <FlatList\r\n      data={data}\r\n      renderItem={renderPrograms}\r\n      keyExtractor={(item) => item.program_id}\r\n      style={body}\r\n    />\r\n  )\r\n}\r\n\r\nconst styles = (theme: DefaultTheme) => {\r\n  const { content, text, mainBackground } = theme\r\n  return StyleSheet.create({\r\n    body: {\r\n      padding: 5,\r\n    },\r\n    programStyle: {\r\n      backgroundColor: content,\r\n      height: 100,\r\n      marginBottom: 10,\r\n    },\r\n    test: {\r\n      fontSize: 100,\r\n    },\r\n  })\r\n}\r\n\r\nexport default Program\r\n"]},"metadata":{},"sourceType":"script"}
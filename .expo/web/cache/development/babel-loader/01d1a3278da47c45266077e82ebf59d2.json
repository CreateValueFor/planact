{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Navigation;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _themes = require(\"../style/themes\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _BottomTabNavigator = _interopRequireDefault(require(\"./BottomTabNavigator\"));\n\nvar _NotFoundScreen = _interopRequireDefault(require(\"../screens/NotFoundScreen\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _Auth = _interopRequireDefault(require(\"../screens/Auth/Auth\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\rjqnr\\\\src\\\\planact\\\\src\\\\navigation\\\\index.tsx\";\n\nfunction Navigation() {\n  var theme = (0, _reactRedux.useSelector)(function (_ref) {\n    var theme = _ref.theme;\n    return theme;\n  });\n  return _react.default.createElement(_native.NavigationContainer, {\n    theme: (0, _themes.isLight)(theme) ? _native.DefaultTheme : _native.DarkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(RootNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Stack = (0, _stack.createStackNavigator)();\n\nfunction RootNavigator() {\n  var _useSelector = (0, _reactRedux.useSelector)(function (state) {\n    return state.userAuth;\n  }),\n      token = _useSelector.token,\n      loading = _useSelector.loading,\n      error = _useSelector.error,\n      status = _useSelector.status;\n\n  return status ? _react.default.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: _BottomTabNavigator.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: _NotFoundScreen.default,\n    options: {\n      title: 'Oops!'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  })) : _react.default.createElement(Stack.Navigator, {\n    headerMode: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"Auth\",\n    component: _Auth.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/rjqnr/src/planact/src/navigation/index.tsx"],"names":["Navigation","theme","NavDefaultTheme","DarkTheme","Stack","RootNavigator","state","userAuth","token","loading","error","status","headerShown","BottomTabNavigator","NotFoundScreen","title","Auth"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAMA;;AACA;;AACA;;AACA;;AAEA;;;;AAEe,SAASA,UAAT,GAAsB;AACnC,MAAMC,KAAK,GAAG,6BAAY;AAAA,QAAGA,KAAH,QAAGA,KAAH;AAAA,WAA4BA,KAA5B;AAAA,GAAZ,CAAd;AACA,SACE,6BAAC,2BAAD;AAEE,IAAA,KAAK,EAAE,qBAAQA,KAAR,IAAiBC,oBAAjB,GAAmCC,iBAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,6BAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;;AAUD,IAAMC,KAAK,GAAG,kCAAd;;AAEA,SAASC,aAAT,GAAyB;AACvB,qBAA0C,6BACxC,UAACC,KAAD;AAAA,WAAwBA,KAAK,CAACC,QAA9B;AAAA,GADwC,CAA1C;AAAA,MAAQC,KAAR,gBAAQA,KAAR;AAAA,MAAeC,OAAf,gBAAeA,OAAf;AAAA,MAAwBC,KAAxB,gBAAwBA,KAAxB;AAAA,MAA+BC,MAA/B,gBAA+BA,MAA/B;;AAGA,SAAOA,MAAM,GACX,6BAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,aAAa,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEC,2BAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,6BAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAEC,uBAFb;AAGE,IAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADW,GAUX,6BAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,UAAU,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEC,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF;AAcD","sourcesContent":["import React from 'react'\r\nimport { isLight } from '@/style/themes'\r\nimport {\r\n  DarkTheme,\r\n  DefaultTheme as NavDefaultTheme,\r\n  NavigationContainer,\r\n} from '@react-navigation/native'\r\nimport LinkingConfiguration from './LinkingConfiguration'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport BottomTabNavigator from './BottomTabNavigator'\r\nimport NotFoundScreen from '@/screens/NotFoundScreen'\r\nimport { useSelector } from 'react-redux'\r\nimport { GlobalState } from '@/modules'\r\nimport Auth from '@/screens/Auth/Auth'\r\n\r\nexport default function Navigation() {\r\n  const theme = useSelector(({ theme }: GlobalState) => theme)\r\n  return (\r\n    <NavigationContainer\r\n      // linking={LinkingConfiguration}\r\n      theme={isLight(theme) ? NavDefaultTheme : DarkTheme}\r\n    >\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  )\r\n}\r\n\r\n// A root stack navigator is often used for displaying modals on top of all other content\r\n// Read more here: https://reactnavigation.org/docs/modal\r\nexport type RootStackParamList = {\r\n  Root: undefined\r\n  NotFound: undefined\r\n  Auth: undefined\r\n}\r\n\r\nconst Stack = createStackNavigator<RootStackParamList>()\r\n\r\nfunction RootNavigator() {\r\n  const { token, loading, error, status } = useSelector(\r\n    (state: GlobalState) => state.userAuth\r\n  )\r\n  return status ? (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\r\n      <Stack.Screen\r\n        name=\"NotFound\"\r\n        component={NotFoundScreen}\r\n        options={{ title: 'Oops!' }}\r\n      />\r\n    </Stack.Navigator>\r\n  ) : (\r\n    <Stack.Navigator headerMode=\"none\">\r\n      <Stack.Screen name=\"Auth\" component={Auth} />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"script"}
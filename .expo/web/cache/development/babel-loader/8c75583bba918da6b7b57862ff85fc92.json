{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectDestructuringEmpty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectDestructuringEmpty\"));\n\nvar _TouchableView = require(\"../../components/TouchableView\");\n\nvar _userAuth = require(\"../../modules/userAuth\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _reactNavigation = require(\"react-navigation\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\rjqnr\\\\src\\\\planact\\\\src\\\\screens\\\\Auth\\\\Auth.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction Auth(_ref) {\n  (0, _objectDestructuringEmpty2.default)(_ref);\n\n  var _useSelector = (0, _reactRedux.useSelector)(function (state) {\n    return state;\n  }),\n      theme = _useSelector.theme;\n\n  var _styles = styles(theme),\n      container = _styles.container,\n      input = _styles.input,\n      button = _styles.button;\n\n  var _useSelector2 = (0, _reactRedux.useSelector)(function (state) {\n    return state.userAuth;\n  }),\n      token = _useSelector2.token,\n      loading = _useSelector2.loading,\n      error = _useSelector2.error;\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      username = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onChange = function onChange(e) {};\n\n  var dispatch = (0, _reactRedux.useDispatch)();\n  var username1 = 'planact';\n  var password1 = 'planact123!';\n  return _react.default.createElement(_reactNavigation.SafeAreaView, {\n    style: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    source: require(\"../../assets/img/planact.jpg\"),\n    style: {\n      width: 250,\n      height: 100,\n      marginBottom: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNativeGestureHandler.TextInput, {\n    style: input,\n    value: username,\n    onChangeText: function onChangeText(text) {\n      return setUserName(text);\n    },\n    placeholder: \"\\uC0AC\\uC6A9\\uC790 \\uC774\\uB984\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNativeGestureHandler.TextInput, {\n    style: input,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_TouchableView.TouchableView, {\n    style: button,\n    onPress: function onPress() {\n      dispatch((0, _userAuth.login)({\n        username: username1,\n        password: password1\n      }));\n      setPassword('');\n      setUserName('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"\\uB85C\\uADF8\\uC778\")), _react.default.createElement(_TouchableView.TouchableView, {\n    style: button,\n    onPress: function onPress() {\n      dispatch((0, _userAuth.register)({\n        username: username,\n        password: password\n      }));\n      setUserName('');\n      setPassword('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")));\n}\n\nvar styles = function styles(theme) {\n  var content = theme.content,\n      text = theme.text,\n      mainBackground = theme.mainBackground,\n      selected = theme.selected,\n      primary = theme.primary,\n      secondary = theme.secondary;\n  return _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: mainBackground\n    },\n    input: {\n      backgroundColor: content,\n      color: text,\n      borderRadius: 5,\n      marginBottom: 10,\n      width: 200,\n      height: 30\n    },\n    button: {\n      backgroundColor: primary.main,\n      color: primary.text,\n      borderColor: primary.border,\n      borderWidth: 5,\n      width: 200,\n      height: 30,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  });\n};\n\nvar _default = Auth;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/rjqnr/src/planact/src/screens/Auth/Auth.tsx"],"names":["Auth","state","theme","styles","container","input","button","userAuth","token","loading","error","username","setUserName","password","setPassword","onChange","e","dispatch","username1","password1","require","width","height","marginBottom","text","content","mainBackground","selected","primary","secondary","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","color","borderRadius","main","borderColor","border","borderWidth","display"],"mappings":"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","sourcesContent":["import { TouchableView } from '@/components/TouchableView'\r\nimport { GlobalState } from '@/modules'\r\nimport { login, register } from '@/modules/userAuth'\r\nimport { DefaultTheme } from '@/style/styled'\r\nimport React, { useState } from 'react'\r\nimport { Image } from 'react-native'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport { TextInput } from 'react-native-gesture-handler'\r\nimport { SafeAreaView } from 'react-navigation'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\ninterface AuthProps {}\r\n\r\nfunction Auth({}: AuthProps) {\r\n  const { theme } = useSelector((state: GlobalState) => state)\r\n  const { container, input, button } = styles(theme)\r\n  const { token, loading, error } = useSelector(\r\n    (state: GlobalState) => state.userAuth\r\n  )\r\n  const [username, setUserName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const onChange = (e) => {}\r\n  const dispatch = useDispatch()\r\n  const username1 = 'planact'\r\n  const password1 = 'planact123!'\r\n  return (\r\n    <SafeAreaView style={container}>\r\n      <Image\r\n        source={require('@/assets/img/planact.jpg')}\r\n        style={{ width: 250, height: 100, marginBottom: 100 }}\r\n      />\r\n      <TextInput\r\n        style={input}\r\n        value={username}\r\n        onChangeText={(text) => setUserName(text)}\r\n        placeholder=\"사용자 이름\"\r\n      />\r\n      <TextInput\r\n        style={input}\r\n        value={password}\r\n        onChangeText={(text) => setPassword(text)}\r\n        placeholder=\"비밀번호\"\r\n        secureTextEntry={true}\r\n      />\r\n\r\n      <TouchableView\r\n        style={button}\r\n        onPress={() => {\r\n          dispatch(login({ username: username1, password: password1 }))\r\n          setPassword('')\r\n          setUserName('')\r\n        }}\r\n      >\r\n        <Text>로그인</Text>\r\n      </TouchableView>\r\n      <TouchableView\r\n        style={button}\r\n        onPress={() => {\r\n          dispatch(register({ username, password }))\r\n          setUserName('')\r\n          setPassword('')\r\n        }}\r\n      >\r\n        <Text>회원가입</Text>\r\n      </TouchableView>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = (theme: DefaultTheme) => {\r\n  const { content, text, mainBackground, selected, primary, secondary } = theme\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      backgroundColor: mainBackground,\r\n    },\r\n    input: {\r\n      backgroundColor: content,\r\n      color: text,\r\n      borderRadius: 5,\r\n      marginBottom: 10,\r\n      width: 200,\r\n      height: 30,\r\n    },\r\n    button: {\r\n      backgroundColor: primary.main,\r\n      color: primary.text,\r\n      borderColor: primary.border,\r\n      borderWidth: 5,\r\n      width: 200,\r\n      height: 30,\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  })\r\n}\r\n\r\nexport default Auth\r\n"]},"metadata":{},"sourceType":"script"}
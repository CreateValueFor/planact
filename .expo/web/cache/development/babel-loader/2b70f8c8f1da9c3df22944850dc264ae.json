{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectDestructuringEmpty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectDestructuringEmpty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _dayjs = _interopRequireDefault(require(\"dayjs\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _DailyList = _interopRequireDefault(require(\"./DailyList\"));\n\nvar _DailyView = _interopRequireDefault(require(\"./DailyView\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _UserDailyData = require(\"../../db/UserDailyData\");\n\nvar _UserScheduleData = require(\"../../db/UserScheduleData\");\n\nvar _userSchedules = require(\"../../modules/userSchedules\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\rjqnr\\\\src\\\\planact_test\\\\src\\\\screens\\\\home\\\\Home.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar UNIT_FETCH_ONCE = 7;\nvar FETCH_LIMIT = 35;\n\nvar fillEmptyDay = function fillEmptyDay(dbData) {\n  var from = dbData.start;\n  var to = dbData.end;\n  var idx = 0;\n\n  for (var i = 0; i <= to.diff(from, 'days'); i++) {\n    var date = from.add(i, 'days');\n\n    if (idx >= dbData.data.length || dbData.data[idx].date.format(\"YYYYMMDD\") != date.format(\"YYYYMMDD\")) {\n      dbData.data.splice(idx, 0, {\n        date: date,\n        events: []\n      });\n    }\n\n    idx++;\n  }\n\n  return dbData;\n};\n\nfunction Home(_ref) {\n  (0, _objectDestructuringEmpty2.default)(_ref);\n  var user_id = \"111\";\n\n  var _useSelector = (0, _reactRedux.useSelector)(function (state) {\n    return state;\n  }),\n      theme = _useSelector.theme,\n      userSchedules = _useSelector.userSchedules;\n\n  var dispatch = (0, _reactRedux.useDispatch)();\n\n  var _useState = (0, _react.useState)(true),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var today = (0, _dayjs.default)();\n\n  var _useState3 = (0, _react.useState)({\n    start: today,\n    end: today,\n    data: []\n  }),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      dailylist = _useState4[0],\n      setDailylist = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      selected = _useState6[0],\n      setSelected = _useState6[1];\n\n  var start = dailylist.start,\n      end = dailylist.end,\n      data = dailylist.data;\n  (0, _react.useEffect)(function () {\n    (function _callee() {\n      var schedules, newDailyListData;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap((0, _UserScheduleData.getUserSchedule)(user_id));\n\n            case 2:\n              schedules = _context.sent;\n              dispatch({\n                type: _userSchedules.SCHEDULES_FETCH,\n                schedules: schedules\n              });\n              _context.next = 6;\n              return _regenerator.default.awrap((0, _UserDailyData.getDailyList)({\n                user_id: user_id,\n                start: start,\n                end: today.add(UNIT_FETCH_ONCE - 1, 'days')\n              }));\n\n            case 6:\n              newDailyListData = _context.sent;\n              newDailyListData = fillEmptyDay(newDailyListData);\n              setDailylist(newDailyListData);\n              setLoading(false);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var loadAfterData = function loadAfterData() {\n    var newStart, newEnd, newDailyListData;\n    return _regenerator.default.async(function loadAfterData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            newStart = end.add(1, 'days');\n            newEnd = end.add(UNIT_FETCH_ONCE, 'days');\n            _context2.next = 4;\n            return _regenerator.default.awrap((0, _UserDailyData.getDailyList)({\n              user_id: user_id,\n              start: newStart,\n              end: newEnd\n            }));\n\n          case 4:\n            newDailyListData = _context2.sent;\n            newDailyListData = fillEmptyDay(newDailyListData);\n            setDailylist({\n              start: start,\n              end: newEnd,\n              data: data.concat(newDailyListData.data)\n            });\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadBeforeData = function loadBeforeData() {\n    var newStart, newEnd, newDailyListData;\n    return _regenerator.default.async(function loadBeforeData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            newStart = start.subtract(UNIT_FETCH_ONCE, 'days');\n            newEnd = start.subtract(1, 'days');\n            _context3.next = 4;\n            return _regenerator.default.awrap((0, _UserDailyData.getDailyList)({\n              user_id: user_id,\n              start: newStart,\n              end: newEnd\n            }));\n\n          case 4:\n            newDailyListData = _context3.sent;\n            newDailyListData = fillEmptyDay(newDailyListData);\n            setDailylist({\n              start: newStart,\n              end: end,\n              data: newDailyListData.data.concat(data)\n            });\n            setSelected(function (prev) {\n              return prev + UNIT_FETCH_ONCE;\n            });\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loader = function loader(after) {\n    var load;\n    return _regenerator.default.async(function loader$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!(end.diff(start, 'days') > FETCH_LIMIT)) {\n              _context4.next = 3;\n              break;\n            }\n\n            _reactNative.Alert.alert(\"최대 5주까지 가능합니다.\");\n\n            return _context4.abrupt(\"return\");\n\n          case 3:\n            setLoading(true);\n            load = after ? loadAfterData : loadBeforeData;\n            load().then(function () {\n              return setLoading(false);\n            });\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _react.default.createElement(_reactNative.SafeAreaView, {\n    style: styles(theme).container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      minHeight: 140\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_DailyList.default, (0, _extends2.default)({\n    loading: loading,\n    loader: loader,\n    selector: setSelected\n  }, dailylist, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }))), _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, !loading && _react.default.createElement(_DailyView.default, (0, _extends2.default)({}, dailylist.data[selected], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }))));\n}\n\nvar styles = function styles(theme) {\n  return _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"stretch\",\n      backgroundColor: theme.mainBackground\n    }\n  });\n};\n\nvar _default = Home;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/rjqnr/src/planact_test/src/screens/home/Home.tsx"],"names":["UNIT_FETCH_ONCE","FETCH_LIMIT","fillEmptyDay","dbData","from","start","to","end","idx","i","diff","date","add","data","length","format","splice","events","Home","user_id","state","theme","userSchedules","dispatch","loading","setLoading","today","dailylist","setDailylist","selected","setSelected","schedules","type","SCHEDULES_FETCH","newDailyListData","loadAfterData","newStart","newEnd","concat","loadBeforeData","subtract","prev","loader","after","Alert","alert","load","then","styles","container","minHeight","flex","StyleSheet","create","alignItems","backgroundColor","mainBackground"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DailyList from \"./DailyList\";\r\nimport DailyView from \"./DailyView\";\r\nimport { DefaultTheme } from \"@/style/styled\";\r\nimport { IDailyList } from \"@/utils/data\";\r\nimport { SafeAreaView, View, StyleSheet } from \"react-native\";\r\nimport { getDailyList } from \"@/db/UserDailyData\";\r\nimport { Alert } from \"react-native\";\r\nimport { GlobalState } from \"@modules/index\";\r\nimport { getUserSchedule } from \"@/db/UserScheduleData\";\r\nimport { SCHEDULES_FETCH } from \"@/modules/userSchedules\";\r\n\r\n// 1회당 가져올 날짜 수\r\nconst UNIT_FETCH_ONCE = 7;\r\n// 최대 가져올 날짜 수\r\nconst FETCH_LIMIT = 35;\r\n// DB에서 가져온 EVENT 데이터 + 비어있는 날짜 채우기\r\nconst fillEmptyDay = (dbData:IDailyList):IDailyList => {\r\n    const from = dbData.start;\r\n    const to = dbData.end;\r\n\r\n    let idx = 0;\r\n    for(let i = 0; i<=to.diff(from, 'days'); i++){\r\n        const date = from.add(i, 'days');\r\n        if(idx >= dbData.data.length || \r\n            dbData.data[idx].date.format(\"YYYYMMDD\") != date.format(\"YYYYMMDD\")){\r\n            dbData.data.splice(idx, 0, {\r\n                date,\r\n                events: []\r\n            })\r\n        }\r\n        idx++;\r\n    }\r\n    return dbData;\r\n}\r\n\r\nexport interface HomeProps{\r\n}\r\n\r\nfunction Home({}:HomeProps){\r\n    const user_id=\"111\";\r\n    const {theme, userSchedules} = useSelector((state:GlobalState) => state);\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState<Boolean>(true);\r\n\r\n    const today = dayjs()\r\n    const [dailylist, setDailylist] = useState<IDailyList>({\r\n        start: today,\r\n        end: today,\r\n        data: []\r\n    });\r\n    const [selected, setSelected] = useState<number>(0);\r\n    const {start, end, data} = dailylist;\r\n    \r\n    useEffect(() => {\r\n        (async () => {\r\n            // Fetch Schedules\r\n            const schedules = await getUserSchedule(user_id);\r\n            dispatch({type: SCHEDULES_FETCH, schedules});\r\n            \r\n            // Fetch Events\r\n            let newDailyListData:IDailyList = await getDailyList({user_id, start, end:today.add(UNIT_FETCH_ONCE-1, 'days')});\r\n            newDailyListData = fillEmptyDay(newDailyListData);\r\n            setDailylist(newDailyListData);\r\n            setLoading(false);\r\n        })();\r\n    },[])\r\n    // 7일치 데이터\r\n    const loadAfterData = async () => {\r\n        const newStart = end.add(1, 'days');\r\n        const newEnd = end.add(UNIT_FETCH_ONCE, 'days');\r\n        let newDailyListData:IDailyList = await getDailyList({user_id, start: newStart, end:newEnd});\r\n        newDailyListData = fillEmptyDay(newDailyListData);\r\n        setDailylist({\r\n            start,\r\n            end: newEnd,\r\n            data: data.concat(newDailyListData.data)\r\n        });\r\n    }\r\n    const loadBeforeData = async () => {\r\n        const newStart = start.subtract(UNIT_FETCH_ONCE, 'days')\r\n        const newEnd = start.subtract(1, 'days');\r\n        let newDailyListData:IDailyList = await getDailyList({user_id, start: newStart, end:newEnd});\r\n        newDailyListData = fillEmptyDay(newDailyListData);\r\n        setDailylist({\r\n            start: newStart,\r\n            end,\r\n            data: newDailyListData.data.concat(data)\r\n        });\r\n        setSelected(prev => prev+UNIT_FETCH_ONCE);\r\n    }\r\n\r\n    const loader = async (after:boolean) => {\r\n        if(end.diff(start, 'days') > FETCH_LIMIT){\r\n            Alert.alert(\"최대 5주까지 가능합니다.\")\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        const load = after ? loadAfterData : loadBeforeData;\r\n        load().then(() => setLoading(false));\r\n    };\r\n    \r\n    return(\r\n        <SafeAreaView style={styles(theme).container}>\r\n            <View style={{minHeight:140}}>\r\n                <DailyList\r\n                    loading={loading}\r\n                    loader={loader}\r\n                    selector={setSelected}\r\n                    {...dailylist}\r\n                />\r\n            </View>\r\n            <View style={{flex:1}}>\r\n                {\r\n                    !loading &&\r\n                    <DailyView {...dailylist.data[selected]}/>\r\n                }\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = (theme:DefaultTheme) => StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      alignItems:\"stretch\",\r\n      backgroundColor: theme.mainBackground,\r\n    },\r\n});\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"/Users/sooyoung/Projects/Planact/src/materials/Button.tsx\";\nvar _excluded = [\"color\", \"disabled\", \"content\"];\n\nvar Button = function Button(_ref) {\n  var color = _ref.color,\n      disabled = _ref.disabled,\n      content = _ref.content,\n      others = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var theme = (0, _reactRedux.useSelector)(function (_ref2) {\n    var theme = _ref2.theme;\n    return theme;\n  });\n\n  var _styles = styles(theme, {\n    color: color,\n    disabled: disabled\n  }),\n      container = _styles.container,\n      text = _styles.text;\n\n  return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({\n    style: container,\n    disabled: disabled\n  }, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, content));\n};\n\nvar styles = function styles(theme, _ref3) {\n  var color = _ref3.color,\n      disabled = _ref3.disabled;\n\n  var _ref4 = color ? theme[color] : theme.primary,\n      main = _ref4.main,\n      text = _ref4.text,\n      border = _ref4.border;\n\n  return _reactNative.StyleSheet.create({\n    container: {\n      backgroundColor: main,\n      borderColor: border,\n      opacity: disabled ? 0.6 : 1,\n      borderWidth: .5,\n      borderRadius: 5,\n      padding: 10\n    },\n    text: {\n      fontSize: 20,\n      color: text\n    }\n  });\n};\n\nvar _default = Button;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sooyoung/Projects/Planact/src/materials/Button.tsx"],"names":["Button","color","disabled","content","others","theme","styles","container","text","primary","main","border","StyleSheet","create","backgroundColor","borderColor","opacity","borderWidth","borderRadius","padding","fontSize"],"mappings":";;;;;;;;;;;AAGA;;AACA;;AACA;;;;;AAMA,IAAMA,MAAM,GAAG,SAATA,MAAS,OAA2D;AAAA,MAAjDC,KAAiD,QAAjDA,KAAiD;AAAA,MAA1CC,QAA0C,QAA1CA,QAA0C;AAAA,MAAhCC,OAAgC,QAAhCA,OAAgC;AAAA,MAApBC,MAAoB;AACtE,MAAMC,KAAK,GAAG,6BAAY;AAAA,QAAEA,KAAF,SAAEA,KAAF;AAAA,WAAsBA,KAAtB;AAAA,GAAZ,CAAd;;AACA,gBAA0BC,MAAM,CAACD,KAAD,EAAQ;AAACJ,IAAAA,KAAK,EAALA,KAAD;AAAQC,IAAAA,QAAQ,EAARA;AAAR,GAAR,CAAhC;AAAA,MAAOK,SAAP,WAAOA,SAAP;AAAA,MAAkBC,IAAlB,WAAkBA,IAAlB;;AACF,SACE,6BAAC,6BAAD;AAAkB,IAAA,KAAK,EAAED,SAAzB;AAAoC,IAAA,QAAQ,EAAEL;AAA9C,KAA4DE,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEI,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OADH,CADF,CADF;AAOD,CAVD;;AAgBA,IAAMG,MAAM,GAAG,SAATA,MAAS,CAACD,KAAD,SAA4D;AAAA,MAAtCJ,KAAsC,SAAtCA,KAAsC;AAAA,MAA/BC,QAA+B,SAA/BA,QAA+B;;AACvE,cAA6BD,KAAK,GAAGI,KAAK,CAACJ,KAAD,CAAR,GAAkBI,KAAK,CAACI,OAA1D;AAAA,MAAOC,IAAP,SAAOA,IAAP;AAAA,MAAaF,IAAb,SAAaA,IAAb;AAAA,MAAmBG,MAAnB,SAAmBA,MAAnB;;AACA,SAAOC,wBAAWC,MAAX,CAAkB;AACrBN,IAAAA,SAAS,EAAE;AACPO,MAAAA,eAAe,EAAEJ,IADV;AAEPK,MAAAA,WAAW,EAAEJ,MAFN;AAGPK,MAAAA,OAAO,EAAEd,QAAQ,GAAG,GAAH,GAAS,CAHnB;AAIPe,MAAAA,WAAW,EAAE,EAJN;AAKPC,MAAAA,YAAY,EAAE,CALP;AAMPC,MAAAA,OAAO,EAAE;AANF,KADU;AASrBX,IAAAA,IAAI,EAAC;AACDY,MAAAA,QAAQ,EAAE,EADT;AAEDnB,MAAAA,KAAK,EAAEO;AAFN;AATgB,GAAlB,CAAP;AAeH,CAjBD;;eAmBeR,M","sourcesContent":["\nimport { AppState } from '@/../App';\nimport { DefaultTheme } from '@/style/styled';\nimport React from 'react';\nimport { StyleSheet, TouchableOpacity, TouchableOpacityProps, Text } from 'react-native'\nimport { useSelector } from 'react-redux';\n\ninterface ButtonProps extends TouchableOpacityProps{\n    color?: \"primary\" | \"secondary\" | \"ghost\"\n    content: string\n}\nconst Button = function({color, disabled, content, ...others}:ButtonProps){\n    const theme = useSelector(({theme}:AppState) => theme);\n    const {container, text} = styles(theme, {color, disabled});\n  return(\n    <TouchableOpacity style={container} disabled={disabled} {...others}>\n      <Text style={text}>\n        {content}\n      </Text>\n    </TouchableOpacity>\n  )\n}\n\ninterface ButtonStyleProps {\n    color?: \"primary\" | \"secondary\" | \"ghost\"\n    disabled?: boolean | null\n}\nconst styles = (theme:DefaultTheme, {color, disabled}:ButtonStyleProps) => {\n    const {main, text, border} = color ? theme[color] : theme.primary;\n    return StyleSheet.create({\n        container: {\n            backgroundColor: main,\n            borderColor: border,\n            opacity: disabled ? 0.6 : 1,\n            borderWidth: .5,\n            borderRadius: 5,\n            padding: 10,\n        },\n        text:{\n            fontSize: 20,\n            color: text\n        },\n\n    })\n}\n\nexport default Button;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _Daily = _interopRequireDefault(require(\"./Daily\"));\n\nvar _jsxFileName = \"/Users/sooyoung/Projects/Planact/src/components/DailyList.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction DailyList(props) {\n  var _this = this;\n\n  var start = props.start,\n      end = props.end,\n      data = props.data,\n      loader = props.loader,\n      loading = props.loading;\n\n  var _useState = (0, _react.useState)(start),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      currentStart = _useState2[0],\n      setCurrentStart = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(end),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      currentEnd = _useState4[0],\n      setCurrentEnd = _useState4[1];\n\n  var theme = (0, _reactRedux.useSelector)(function (state) {\n    return state;\n  });\n\n  var _useState5 = (0, _react.useState)([]),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      dailylist = _useState6[0],\n      setDailyList = _useState6[1];\n\n  var getDailyBoxes = function getDailyBoxes(from, to) {\n    var diff = to.diff(from, 'days');\n    var filteredData = data.filter(function (_ref) {\n      var date = _ref.date;\n      return date >= from && date <= to;\n    });\n    var idx = 0;\n\n    for (var i = 0; i <= diff; i++) {\n      var date = from.add(i, 'days');\n      console.log(idx, date);\n\n      if (idx >= filteredData.length || filteredData[idx].date.format(\"YYYYMMDD\") != date.format(\"YYYYMMDD\")) {\n        filteredData.splice(idx, 0, {\n          date: date,\n          events: []\n        });\n      }\n\n      idx++;\n    }\n\n    return filteredData;\n  };\n\n  (0, _react.useEffect)(function () {\n    if (loading) return;\n    var list = getDailyBoxes(start, end);\n    setDailyList(list);\n    setCurrentStart(start);\n    setCurrentEnd(end);\n  }, [loading]);\n  (0, _react.useEffect)(function () {\n    if (start >= currentStart) return;\n    var newDailylist = getDailyBoxes(start, currentStart.subtract(1, 'day'));\n    setDailyList(function (prev) {\n      return newDailylist.concat(prev);\n    });\n    setCurrentStart(start);\n  }, [start]);\n  (0, _react.useEffect)(function () {\n    if (currentEnd >= end || currentStart == currentEnd) return;\n    var newDailylist = getDailyBoxes(currentEnd.add(1, 'day'), end);\n    setDailyList(function (prev) {\n      return prev.concat(newDailylist);\n    });\n    setCurrentEnd(end);\n  }, [end]);\n\n  var _useState7 = (0, _react.useState)(0),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      contentSize = _useState8[0],\n      setContentSize = _useState8[1];\n\n  var getData = function getData(props) {\n    var x;\n    return _regenerator.default.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            x = props.nativeEvent.contentOffset.x;\n            if (x < 0) loader(false);else if (contentSize - x < 300) loader(true);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var renderItem = function renderItem(props) {\n    if (loading) return _react.default.createElement(_react.default.Fragment, null);\n    return _react.default.createElement(_Daily.default, (0, _extends2.default)({\n      onPressed: true\n    }, props.item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  return _react.default.createElement(_reactNative.FlatList, {\n    onScrollEndDrag: getData,\n    onContentSizeChange: setContentSize,\n    horizontal: true,\n    showsHorizontalScrollIndicator: true,\n    initialNumToRender: 7,\n    style: styles(theme).scroll,\n    data: dailylist,\n    keyExtractor: function keyExtractor(item) {\n      return String(item.date.format(\"YYYYMMDD\"));\n    },\n    renderItem: renderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  });\n}\n\nvar styles = function styles(theme) {\n  return _reactNative.StyleSheet.create({\n    scroll: {\n      flex: 1,\n      padding: 5,\n      paddingVertical: 10,\n      backgroundColor: \"#fafafa\"\n    }\n  });\n};\n\nvar _default = DailyList;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sooyoung/Projects/Planact/src/components/DailyList.tsx"],"names":["DailyList","props","start","end","data","loader","loading","currentStart","setCurrentStart","currentEnd","setCurrentEnd","theme","state","dailylist","setDailyList","getDailyBoxes","from","to","diff","filteredData","filter","date","idx","i","add","console","log","length","format","splice","events","list","newDailylist","subtract","prev","concat","contentSize","setContentSize","getData","x","nativeEvent","contentOffset","renderItem","item","styles","scroll","String","StyleSheet","create","flex","padding","paddingVertical","backgroundColor"],"mappings":"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","sourcesContent":["import { GlobalState } from \"@/../App\";\nimport { IDailyList, IDaily } from \"@/utils/data\";\nimport { Dayjs } from \"dayjs\";\nimport React from \"react\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Dimensions, FlatList, StyleSheet } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { DefaultTheme } from \"styled-components/native\";\nimport Daily from \"./Daily\";\n\ninterface DailyListProps extends IDailyList {\n    loading: Boolean;\n    selector: (index:number) => void;\n    loader: (after:boolean) => Promise<void>;\n}\nfunction DailyList(props: DailyListProps){\n    const {start, end, data, loader, loading} = props;\n    const [currentStart, setCurrentStart] = useState<Dayjs>(start);\n    const [currentEnd, setCurrentEnd] = useState<Dayjs>(end);\n    const theme = useSelector((state:GlobalState) => state);\n    \n    // 최적화 필요!!!\n    const [dailylist, setDailyList] = useState<IDaily[]>([]);\n    // 추가할 Daily Box의 배열\n    const getDailyBoxes = (from:Dayjs, to:Dayjs):IDaily[] => {\n        const diff = to.diff(from, 'days');\n        const filteredData = data.filter(({date}:IDaily) => date >= from && date <= to);\n        let idx = 0;\n        for(let i = 0; i<=diff; i++){\n            const date = from.add(i, 'days');\n            console.log(idx, date)\n            if(idx >= filteredData.length || \n                filteredData[idx].date.format(\"YYYYMMDD\") != date.format(\"YYYYMMDD\")){\n                filteredData.splice(idx, 0, {\n                    date,\n                    events: []\n                })\n            }\n            idx++;\n        }\n        return filteredData;\n    }\n\n    useEffect(() => {\n        if(loading) return;\n        let list:IDaily[] = getDailyBoxes(start, end);\n        setDailyList(list);\n        setCurrentStart(start);\n        setCurrentEnd(end);\n    }, [loading])\n\n    useEffect(() => {\n        if(start >= currentStart)\n            return;\n        let newDailylist:IDaily[] = getDailyBoxes(start, currentStart.subtract(1, 'day'))\n        setDailyList( prev => newDailylist.concat(prev))\n        setCurrentStart(start);\n    }, [start])\n\n    useEffect(() => {\n        if(currentEnd >= end || currentStart == currentEnd)\n            return;\n        let newDailylist:IDaily[] = getDailyBoxes(currentEnd.add(1, 'day'), end);\n        setDailyList( prev => prev.concat(newDailylist));\n        setCurrentEnd(end);\n    }, [end])\n\n    const [contentSize, setContentSize] = useState<number>(0);\n    const getData = async (props:any) => {\n        if(loading) return;\n        // loader(true);\n\n        const x = props.nativeEvent.contentOffset.x;\n        if(x < 0)\n            loader(false);\n        else if(contentSize - x < 300)\n            loader(true);\n    }\n    const renderItem = (props:any) => {\n        if(loading) return <></>;\n        return (\n            <Daily \n                onPressed\n                {...props.item} \n            />)\n    }\n\n    return(\n        <FlatList\n            onScrollEndDrag={getData}\n            onContentSizeChange={setContentSize}\n            horizontal\n            showsHorizontalScrollIndicator\n            initialNumToRender={7}\n            style={styles(theme).scroll}\n            data={dailylist}\n            keyExtractor={(item) => String(item.date.format(\"YYYYMMDD\") )}\n            renderItem={renderItem}\n            />\n    )\n}\n\n\nconst styles = (theme:DefaultTheme) => {\n    return StyleSheet.create({\n        scroll:{\n            flex: 1,\n            padding: 5,\n            paddingVertical: 10,\n            backgroundColor: \"#fafafa\",\n        },\n    })\n}\n\n\nexport default DailyList;"]},"metadata":{},"sourceType":"script"}
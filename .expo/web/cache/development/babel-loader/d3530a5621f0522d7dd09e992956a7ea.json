{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.persistor = exports.store = void 0;\n\nvar _redux = require(\"redux\");\n\nvar _theme = _interopRequireDefault(require(\"./theme\"));\n\nvar _userAuth = _interopRequireDefault(require(\"./userAuth\"));\n\nvar _userSchedules = _interopRequireDefault(require(\"./userSchedules\"));\n\nvar _reduxDevtoolsExtension = require(\"redux-devtools-extension\");\n\nvar _reduxLogger = _interopRequireDefault(require(\"redux-logger\"));\n\nvar _reduxThunk = _interopRequireDefault(require(\"redux-thunk\"));\n\nvar _reduxPersist = require(\"redux-persist\");\n\nvar _storage = _interopRequireDefault(require(\"redux-persist/lib/storage\"));\n\nvar persistConfig = {\n  key: 'root',\n  storage: _storage.default\n};\nvar rootReducer = (0, _redux.combineReducers)({\n  theme: _theme.default,\n  userSchedules: _userSchedules.default,\n  userAuth: _userAuth.default\n});\nvar persistedReducer = (0, _reduxPersist.persistReducer)(persistConfig, rootReducer);\nvar store = (0, _redux.createStore)(persistedReducer, (0, _reduxDevtoolsExtension.composeWithDevTools)((0, _redux.applyMiddleware)(_reduxThunk.default, _reduxLogger.default)));\nexports.store = store;\nvar persistor = (0, _reduxPersist.persistStore)(store);\nexports.persistor = persistor;","map":{"version":3,"sources":["C:/Users/rjqnr/src/planact/src/modules/index.ts"],"names":["persistConfig","key","storage","rootReducer","theme","userSchedules","userAuth","persistedReducer","store","ReduxThunk","logger","persistor"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA,IAAMA,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAPA;AAFoB,CAAtB;AAMA,IAAMC,WAAW,GAAG,4BAAgB;AAClCC,EAAAA,KAAK,EAALA,cADkC;AAElCC,EAAAA,aAAa,EAAbA,sBAFkC;AAGlCC,EAAAA,QAAQ,EAARA;AAHkC,CAAhB,CAApB;AAMA,IAAMC,gBAAgB,GAAG,kCAAeP,aAAf,EAA8BG,WAA9B,CAAzB;AAIO,IAAIK,KAAK,GAAG,wBACjBD,gBADiB,EAEjB,iDAAoB,4BAAgBE,mBAAhB,EAA4BC,oBAA5B,CAApB,CAFiB,CAAZ;;AAIA,IAAIC,SAAS,GAAG,gCAAaH,KAAb,CAAhB","sourcesContent":["import { useSelector } from 'react-redux'\r\nimport { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport theme from './theme'\r\nimport userAuth from './userAuth'\r\nimport userSchedules from './userSchedules'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport logger from 'redux-logger'\r\nimport ReduxThunk from 'redux-thunk'\r\nimport { persistReducer, persistStore } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\n//로컬 스토리지 설정\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\n// 전체 Global State\r\nconst rootReducer = combineReducers({\r\n  theme,\r\n  userSchedules,\r\n  userAuth,\r\n})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport type GlobalState = ReturnType<typeof rootReducer>\r\n\r\nexport let store = createStore(\r\n  persistedReducer,\r\n  composeWithDevTools(applyMiddleware(ReduxThunk, logger))\r\n)\r\nexport let persistor = persistStore(store)\r\n"]},"metadata":{},"sourceType":"script"}
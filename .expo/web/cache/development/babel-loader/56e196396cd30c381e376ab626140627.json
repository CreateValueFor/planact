{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Navigation;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _themes = require(\"../style/themes\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _LinkingConfiguration = _interopRequireDefault(require(\"./LinkingConfiguration\"));\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _BottomTabNavigator = _interopRequireDefault(require(\"./BottomTabNavigator\"));\n\nvar _NotFoundScreen = _interopRequireDefault(require(\"../screens/NotFoundScreen\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"/Users/sooyoung/Projects/Planact/src/navigation/index.tsx\";\n\nfunction Navigation() {\n  var theme = (0, _reactRedux.useSelector)(function (_ref) {\n    var theme = _ref.theme;\n    return theme;\n  });\n  return _react.default.createElement(_native.NavigationContainer, {\n    linking: _LinkingConfiguration.default,\n    theme: (0, _themes.isLight)(theme) ? _native.DefaultTheme : _native.DarkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(RootNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar Stack = (0, _stack.createStackNavigator)();\n\nfunction RootNavigator() {\n  return _react.default.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: _BottomTabNavigator.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: _NotFoundScreen.default,\n    options: {\n      title: 'Oops!'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/sooyoung/Projects/Planact/src/navigation/index.tsx"],"names":["Navigation","theme","LinkingConfiguration","NavDefaultTheme","DarkTheme","Stack","RootNavigator","headerShown","BottomTabNavigator","NotFoundScreen","title"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAIe,SAASA,UAAT,GAAsB;AACjC,MAAMC,KAAK,GAAG,6BAAY;AAAA,QAAEA,KAAF,QAAEA,KAAF;AAAA,WAAyBA,KAAzB;AAAA,GAAZ,CAAd;AACA,SACE,6BAAC,2BAAD;AACE,IAAA,OAAO,EAAEC,6BADX;AAEE,IAAA,KAAK,EAAE,qBAAQD,KAAR,IAAiBE,oBAAjB,GAAmCC,iBAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,6BAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AASD,IAAMC,KAAK,GAAG,kCAAd;;AAEA,SAASC,aAAT,GAAyB;AACvB,SACE,6BAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,aAAa,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEC,2BAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,6BAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEC,uBAAzC;AAAyD,IAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import React from \"react\";\nimport { DefaultTheme } from \"@/style/styled\";\nimport { isLight } from \"@/style/themes\";\nimport { DarkTheme, DefaultTheme as NavDefaultTheme, NavigationContainer } from \"@react-navigation/native\";\nimport LinkingConfiguration from './LinkingConfiguration';\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport BottomTabNavigator from \"./BottomTabNavigator\";\nimport NotFoundScreen from \"@/screens/NotFoundScreen\";\nimport { useSelector } from \"react-redux\";\nimport { GlobalState } from \"@/../App\";\n\n\nexport default function Navigation() {\n    const theme = useSelector(({theme}:GlobalState) => theme)\n    return (\n      <NavigationContainer\n        linking={LinkingConfiguration}\n        theme={isLight(theme) ? NavDefaultTheme : DarkTheme}>\n        <RootNavigator />\n      </NavigationContainer>\n    );\n  }\n  \n  // A root stack navigator is often used for displaying modals on top of all other content\n  // Read more here: https://reactnavigation.org/docs/modal\n  export type RootStackParamList = {\n    Root: undefined;\n    NotFound: undefined;\n  };\n\n  const Stack = createStackNavigator<RootStackParamList>();\n  \n  function RootNavigator() {\n    return (\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\n        <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n        <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      </Stack.Navigator>\n    );\n  }\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _date = require(\"../../utils/date\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _ToggleEventList = _interopRequireDefault(require(\"./ToggleEventList\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\rjqnr\\\\src\\\\planact_test\\\\src\\\\screens\\\\home\\\\DailyView.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar groupBySchedule = function groupBySchedule(schedules, events) {\n  if (!events.length) return [];\n  var res = {};\n  schedules.forEach(function (schedule) {\n    return res[schedule.schedule_id] = _objectSpread(_objectSpread({}, schedule), {}, {\n      events: []\n    });\n  });\n  events.forEach(function (event) {\n    res[event.schedule_id].events.push(event);\n  });\n  return Object.values(res).filter(function (_ref) {\n    var events = _ref.events;\n    return events.length > 0;\n  });\n};\n\nfunction DailyView(_ref2) {\n  var _this = this;\n\n  var date = _ref2.date,\n      events = _ref2.events;\n\n  var _useSelector = (0, _reactRedux.useSelector)(function (state) {\n    return state;\n  }),\n      theme = _useSelector.theme,\n      userSchedules = _useSelector.userSchedules;\n\n  var _styles = styles(theme),\n      container = _styles.container,\n      title = _styles.title;\n\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      groupedEvents = _useState2[0],\n      setGroupedEvents = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    var aggregated = groupBySchedule(userSchedules, events);\n    setGroupedEvents(aggregated);\n  }, [date]);\n  return _react.default.createElement(_reactNative.View, {\n    style: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, date.format(\"M\\uC6D4 DD\\uC77C \" + _date.korday[date.day()] + \"\\uC694\\uC77C\")), groupedEvents.map(function (schedule, idx) {\n    return _react.default.createElement(_ToggleEventList.default, (0, _extends2.default)({}, schedule, {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }));\n  }));\n}\n\nvar styles = function styles(theme) {\n  var mainBackground = theme.mainBackground,\n      text = theme.text;\n  return _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: mainBackground,\n      padding: 5,\n      paddingHorizontal: 15\n    },\n    title: {\n      textAlign: \"center\",\n      fontWeight: \"800\",\n      fontSize: 18,\n      color: text,\n      marginBottom: 10\n    }\n  });\n};\n\nvar _default = DailyView;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/rjqnr/src/planact_test/src/screens/home/DailyView.tsx"],"names":["groupBySchedule","schedules","events","length","res","forEach","schedule","schedule_id","event","push","Object","values","filter","DailyView","date","state","theme","userSchedules","styles","container","title","groupedEvents","setGroupedEvents","aggregated","format","korday","day","map","idx","mainBackground","text","StyleSheet","create","flex","backgroundColor","padding","paddingHorizontal","textAlign","fontWeight","fontSize","color","marginBottom"],"mappings":"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","sourcesContent":["import { GlobalState } from '@modules/index';\r\nimport { DefaultTheme } from '@/style/styled';\r\nimport { GroupedEvent, IDaily, ISchedule, IUserEvent } from '@/utils/data';\r\nimport { korday } from '@/utils/date';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { useSelector } from 'react-redux';\r\nimport ToggleEventList from './ToggleEventList';\r\n\r\nconst groupBySchedule = (schedules:ISchedule[], events:IUserEvent[]):GroupedEvent[] => {\r\n    if(!events.length)\r\n        return [];\r\n\r\n    const res:{[key:string]: GroupedEvent} = {}\r\n    schedules.forEach(schedule => res[schedule.schedule_id]={\r\n        ...schedule, \r\n        events:[]\r\n    });\r\n    events.forEach((event) => {\r\n        res[event.schedule_id].events.push(event);\r\n    })\r\n    return Object.values(res).filter( ({events}) => events.length>0);\r\n}\r\nfunction DailyView({date, events}:IDaily){\r\n    const {theme, userSchedules} = useSelector((state:GlobalState) => state);\r\n    const {container, title} = styles(theme);\r\n    const [groupedEvents, setGroupedEvents] = useState<GroupedEvent[]>([]);\r\n    useEffect(() => {\r\n        const aggregated = groupBySchedule(userSchedules, events);\r\n        setGroupedEvents(aggregated);\r\n    }, [date])\r\n    return(\r\n        <View style={container}>\r\n            <Text style={title}>\r\n                {date.format(`M월 DD일 ${korday[date.day()]}요일`)}\r\n            </Text>\r\n            {\r\n                groupedEvents.map( (schedule, idx)=> (\r\n                    <ToggleEventList {...schedule} key={idx} />\r\n                ))\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = (theme:DefaultTheme) => {\r\n    const { mainBackground, text } = theme;\r\n    return(\r\n        StyleSheet.create({\r\n            container:{\r\n                flex: 1,\r\n                backgroundColor: mainBackground,\r\n                padding: 5,\r\n                paddingHorizontal: 15\r\n            },\r\n            title:{\r\n                textAlign: \"center\",\r\n                fontWeight: \"800\",\r\n                fontSize: 18,\r\n                color: text,\r\n                marginBottom: 10\r\n            }\r\n        })\r\n    )\r\n}\r\n\r\nexport default DailyView;"]},"metadata":{},"sourceType":"script"}
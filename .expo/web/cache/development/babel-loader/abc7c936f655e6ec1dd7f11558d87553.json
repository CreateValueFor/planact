{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"/Users/sooyoung/Projects/Planact/src/components/EventView.tsx\";\n\nvar _onPress = function onPress(text) {\n  _reactNative.Alert.alert(text);\n};\n\nfunction EventView(props) {\n  var color = props.color,\n      abb = props.abb,\n      title = props.title;\n  var theme = (0, _reactRedux.useSelector)(function (_ref) {\n    var theme = _ref.theme;\n    return theme;\n  });\n\n  var _styles = styles(theme, {\n    color: color\n  }),\n      container = _styles.container,\n      circleContainer = _styles.circleContainer,\n      circle = _styles.circle,\n      content = _styles.content;\n\n  return _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: container,\n    onPress: function onPress() {\n      return _onPress(content);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: circleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: circle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  })), _react.default.createElement(_reactNative.Text, {\n    style: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, abb));\n}\n\nvar styles = function styles(theme, _ref2) {\n  var color = _ref2.color;\n  var mainBackground = theme.mainBackground,\n      text = theme.text;\n  return _reactNative.StyleSheet.create({\n    container: {\n      backgroundColor: mainBackground,\n      height: 20,\n      flexDirection: 'row'\n    },\n    circleContainer: {\n      flex: 1,\n      paddingTop: 2.5,\n      paddingBottom: 3.5,\n      paddingLeft: 3,\n      paddingRight: 5\n    },\n    circle: {\n      backgroundColor: color,\n      flex: 1,\n      borderRadius: 50\n    },\n    content: {\n      flex: 6,\n      color: text\n    }\n  });\n};\n\nvar _default = EventView;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sooyoung/Projects/Planact/src/components/EventView.tsx"],"names":["onPress","text","Alert","alert","EventView","props","color","abb","title","theme","styles","container","circleContainer","circle","content","mainBackground","StyleSheet","create","backgroundColor","height","flexDirection","flex","paddingTop","paddingBottom","paddingLeft","paddingRight","borderRadius"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;;;AAOA,IAAMA,QAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAiB;AAC7BC,qBAAMC,KAAN,CAAYF,IAAZ;AACH,CAFD;;AAGA,SAASG,SAAT,CAAoBC,KAApB,EAAyC;AACrC,MAAOC,KAAP,GAA4BD,KAA5B,CAAOC,KAAP;AAAA,MAAcC,GAAd,GAA4BF,KAA5B,CAAcE,GAAd;AAAA,MAAmBC,KAAnB,GAA4BH,KAA5B,CAAmBG,KAAnB;AACA,MAAMC,KAAK,GAAG,6BAAY;AAAA,QAAEA,KAAF,QAAEA,KAAF;AAAA,WAAsBA,KAAtB;AAAA,GAAZ,CAAd;;AACA,gBAAsDC,MAAM,CAACD,KAAD,EAAQ;AAACH,IAAAA,KAAK,EAALA;AAAD,GAAR,CAA5D;AAAA,MAAOK,SAAP,WAAOA,SAAP;AAAA,MAAkBC,eAAlB,WAAkBA,eAAlB;AAAA,MAAmCC,MAAnC,WAAmCA,MAAnC;AAAA,MAA2CC,OAA3C,WAA2CA,OAA3C;;AACA,SACI,6BAAC,6BAAD;AAAkB,IAAA,KAAK,EAAEH,SAAzB;AAAoC,IAAA,OAAO,EAAE;AAAA,aAAIX,QAAO,CAACc,OAAD,CAAX;AAAA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEF,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,GADL,CAJJ,CADJ;AAUH;;AAKD,IAAMG,MAAM,GAAG,SAATA,MAAS,CAACD,KAAD,SAAsD;AAAA,MAAhCH,KAAgC,SAAhCA,KAAgC;AACjE,MAAOS,cAAP,GAA+BN,KAA/B,CAAOM,cAAP;AAAA,MAAuBd,IAAvB,GAA+BQ,KAA/B,CAAuBR,IAAvB;AACA,SAAOe,wBAAWC,MAAX,CAAkB;AACrBN,IAAAA,SAAS,EAAC;AACNO,MAAAA,eAAe,EAAEH,cADX;AAENI,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,aAAa,EAAE;AAHT,KADW;AAMrBR,IAAAA,eAAe,EAAE;AACbS,MAAAA,IAAI,EAAE,CADO;AAEbC,MAAAA,UAAU,EAAE,GAFC;AAGbC,MAAAA,aAAa,EAAE,GAHF;AAIbC,MAAAA,WAAW,EAAE,CAJA;AAKbC,MAAAA,YAAY,EAAE;AALD,KANI;AAarBZ,IAAAA,MAAM,EAAE;AACJK,MAAAA,eAAe,EAAEZ,KADb;AAEJe,MAAAA,IAAI,EAAE,CAFF;AAGJK,MAAAA,YAAY,EAAE;AAHV,KAba;AAkBrBZ,IAAAA,OAAO,EAAE;AACLO,MAAAA,IAAI,EAAC,CADA;AAELf,MAAAA,KAAK,EAAEL;AAFF;AAlBY,GAAlB,CAAP;AAuBH,CAzBD;;eA2BeG,S","sourcesContent":["import React from 'react'; \nimport { User_Event } from '@/utils/data';\nimport { TouchableOpacity, View, Text, StyleSheet, Alert } from 'react-native';\nimport { DefaultTheme } from '@/style/styled';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '@/../App';\n\ninterface EventViewProps extends User_Event {\n \n}\n\nconst onPress = (text:string) => {\n    Alert.alert(text);\n}\nfunction EventView (props:EventViewProps){\n    const {color, abb, title} = props;\n    const theme = useSelector(({theme}:AppState) => theme);\n    const {container, circleContainer, circle, content} = styles(theme, {color});\n    return(\n        <TouchableOpacity style={container} onPress={()=>onPress(content)} >\n            <View style={circleContainer}>\n                <View style={circle} />\n            </View>\n            <Text style={content}>\n                {abb}\n            </Text>\n        </TouchableOpacity>\n    )\n}\n\ninterface EventViewStyleProps {\n    color: string\n}\nconst styles = (theme:DefaultTheme, {color}:EventViewStyleProps) =>  {\n    const {mainBackground, text} = theme;\n    return StyleSheet.create({\n        container:{\n            backgroundColor: mainBackground,\n            height: 20,\n            flexDirection: 'row'\n        },\n        circleContainer: {\n            flex: 1,\n            paddingTop: 2.5,\n            paddingBottom: 3.5,\n            paddingLeft: 3,\n            paddingRight: 5\n        },\n        circle: {\n            backgroundColor: color,\n            flex: 1,\n            borderRadius: 50,\n        },\n        content: {\n            flex:6,\n            color: text\n        }\n  })\n};\n\nexport default EventView;"]},"metadata":{},"sourceType":"script"}
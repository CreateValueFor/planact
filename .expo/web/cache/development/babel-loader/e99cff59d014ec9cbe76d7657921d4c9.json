{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectDestructuringEmpty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectDestructuringEmpty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _DailyList = _interopRequireDefault(require(\"../components/DailyList\"));\n\nvar _DailyView = _interopRequireDefault(require(\"../components/DailyView\"));\n\nvar _dayjs = _interopRequireDefault(require(\"dayjs\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _UserDailyData = require(\"../db/UserDailyData\");\n\nvar _jsxFileName = \"/Users/sooyoung/Projects/Planact/src/screens/Home.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar UNIT_FETCH_ONCE = 7;\nvar FETCH_LIMIT = 35;\n\nfunction Home(_ref) {\n  (0, _objectDestructuringEmpty2.default)(_ref);\n  var user_id = \"111\";\n  var theme = (0, _reactRedux.useSelector)(function (_ref2) {\n    var theme = _ref2.theme;\n    return theme;\n  });\n\n  var _useState = (0, _react.useState)(true),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var today = (0, _dayjs.default)();\n\n  var _useState3 = (0, _react.useState)({\n    start: today,\n    end: today,\n    data: []\n  }),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      dailylist = _useState4[0],\n      setDailylist = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      selected = _useState6[0],\n      setSelected = _useState6[1];\n\n  var start = dailylist.start,\n      end = dailylist.end,\n      data = dailylist.data;\n\n  var fillEmptyDay = function fillEmptyDay(dbData) {\n    var from = dbData.start;\n    var to = dbData.end;\n    var idx = 0;\n\n    for (var i = 0; i <= to.diff(from, 'days'); i++) {\n      var date = from.add(i, 'days');\n\n      if (idx >= dbData.data.length || dbData.data[idx].date.format(\"YYYYMMDD\") != date.format(\"YYYYMMDD\")) {\n        dbData.data.splice(idx, 0, {\n          date: date,\n          events: []\n        });\n      }\n\n      idx++;\n    }\n\n    return dbData;\n  };\n\n  (0, _react.useEffect)(function () {\n    (function _callee() {\n      var newDailyListData;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap((0, _UserDailyData.getDailyList)({\n                user_id: user_id,\n                start: start,\n                end: today.add(UNIT_FETCH_ONCE - 1, 'days')\n              }));\n\n            case 2:\n              newDailyListData = _context.sent;\n              newDailyListData = fillEmptyDay(newDailyListData);\n              setDailylist(newDailyListData);\n              setLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var loadAfterData = function loadAfterData() {\n    var newStart, newEnd, newDailyListData;\n    return _regenerator.default.async(function loadAfterData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            newStart = end.add(1, 'days');\n            newEnd = end.add(UNIT_FETCH_ONCE, 'days');\n            _context2.next = 4;\n            return _regenerator.default.awrap((0, _UserDailyData.getDailyList)({\n              user_id: user_id,\n              start: newStart,\n              end: newEnd\n            }));\n\n          case 4:\n            newDailyListData = _context2.sent;\n            newDailyListData = fillEmptyDay(newDailyListData);\n            setDailylist({\n              start: start,\n              end: newEnd,\n              data: data.concat(newDailyListData.data)\n            });\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadBeforeData = function loadBeforeData() {\n    var newStart, newEnd, newDailyListData;\n    return _regenerator.default.async(function loadBeforeData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            newStart = start.subtract(UNIT_FETCH_ONCE, 'days');\n            newEnd = start.subtract(1, 'days');\n            _context3.next = 4;\n            return _regenerator.default.awrap((0, _UserDailyData.getDailyList)({\n              user_id: user_id,\n              start: newStart,\n              end: newEnd\n            }));\n\n          case 4:\n            newDailyListData = _context3.sent;\n            newDailyListData = fillEmptyDay(newDailyListData);\n            setDailylist({\n              start: newStart,\n              end: end,\n              data: newDailyListData.data.concat(data)\n            });\n            setSelected(function (prev) {\n              return prev + UNIT_FETCH_ONCE;\n            });\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loader = function loader(after) {\n    var load;\n    return _regenerator.default.async(function loader$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!(end.diff(start, 'days') > FETCH_LIMIT)) {\n              _context4.next = 3;\n              break;\n            }\n\n            (0, _reactNative.Alert)(\"최대 5주까지 가능합니다.\");\n            return _context4.abrupt(\"return\");\n\n          case 3:\n            setLoading(true);\n            load = after ? loadAfterData : loadBeforeData;\n            load().then(function () {\n              return setLoading(false);\n            });\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _react.default.createElement(_reactNative.SafeAreaView, {\n    style: styles(theme).container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      minHeight: 140\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_DailyList.default, (0, _extends2.default)({\n    loading: loading,\n    loader: loader,\n    selector: setSelected\n  }, dailylist, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }))), _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, !loading && _react.default.createElement(_DailyView.default, (0, _extends2.default)({}, dailylist.data[selected], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }))));\n}\n\nvar styles = function styles(theme) {\n  return _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"stretch\",\n      backgroundColor: theme.mainBackground\n    }\n  });\n};\n\nvar _default = Home;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sooyoung/Projects/Planact/src/screens/Home.tsx"],"names":["UNIT_FETCH_ONCE","FETCH_LIMIT","Home","user_id","theme","loading","setLoading","today","start","end","data","dailylist","setDailylist","selected","setSelected","fillEmptyDay","dbData","from","to","idx","i","diff","date","add","length","format","splice","events","newDailyListData","loadAfterData","newStart","newEnd","concat","loadBeforeData","subtract","prev","loader","after","load","then","styles","container","minHeight","flex","StyleSheet","create","alignItems","backgroundColor","mainBackground"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAGA;;AACA;;AAEA;;;;;;;;AAQA,IAAMA,eAAe,GAAG,CAAxB;AAEA,IAAMC,WAAW,GAAG,EAApB;;AACA,SAASC,IAAT,OAA2B;AAAA;AACvB,MAAMC,OAAO,GAAC,KAAd;AACA,MAAMC,KAAK,GAAG,6BAAY;AAAA,QAAEA,KAAF,SAAEA,KAAF;AAAA,WAAyBA,KAAzB;AAAA,GAAZ,CAAd;;AACA,kBAA8B,qBAAkB,IAAlB,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,KAAK,GAAG,qBAAd;;AACA,mBAAkC,qBAAqB;AACnDC,IAAAA,KAAK,EAAED,KAD4C;AAEnDE,IAAAA,GAAG,EAAEF,KAF8C;AAGnDG,IAAAA,IAAI,EAAE;AAH6C,GAArB,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAKA,mBAAgC,qBAAiB,CAAjB,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAON,KAAP,GAA2BG,SAA3B,CAAOH,KAAP;AAAA,MAAcC,GAAd,GAA2BE,SAA3B,CAAcF,GAAd;AAAA,MAAmBC,IAAnB,GAA2BC,SAA3B,CAAmBD,IAAnB;;AAEA,MAAMK,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAkC;AACnD,QAAMC,IAAI,GAAGD,MAAM,CAACR,KAApB;AACA,QAAMU,EAAE,GAAGF,MAAM,CAACP,GAAlB;AAEA,QAAIU,GAAG,GAAG,CAAV;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAEF,EAAE,CAACG,IAAH,CAAQJ,IAAR,EAAc,MAAd,CAAlB,EAAyCG,CAAC,EAA1C,EAA6C;AACzC,UAAME,IAAI,GAAGL,IAAI,CAACM,GAAL,CAASH,CAAT,EAAY,MAAZ,CAAb;;AACA,UAAGD,GAAG,IAAIH,MAAM,CAACN,IAAP,CAAYc,MAAnB,IACCR,MAAM,CAACN,IAAP,CAAYS,GAAZ,EAAiBG,IAAjB,CAAsBG,MAAtB,CAA6B,UAA7B,KAA4CH,IAAI,CAACG,MAAL,CAAY,UAAZ,CADhD,EACwE;AACpET,QAAAA,MAAM,CAACN,IAAP,CAAYgB,MAAZ,CAAmBP,GAAnB,EAAwB,CAAxB,EAA2B;AACvBG,UAAAA,IAAI,EAAJA,IADuB;AAEvBK,UAAAA,MAAM,EAAE;AAFe,SAA3B;AAIH;;AACDR,MAAAA,GAAG;AACN;;AACD,WAAOH,MAAP;AACH,GAjBD;;AAkBA,wBAAU,YAAM;AACZ,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAC2C,iCAAa;AAACb,gBAAAA,OAAO,EAAPA,OAAD;AAAUK,gBAAAA,KAAK,EAALA,KAAV;AAAiBC,gBAAAA,GAAG,EAACF,KAAK,CAACgB,GAAN,CAAUvB,eAAe,GAAC,CAA1B,EAA6B,MAA7B;AAArB,eAAb,CAD3C;;AAAA;AACO4B,cAAAA,gBADP;AAEGA,cAAAA,gBAAgB,GAAGb,YAAY,CAACa,gBAAD,CAA/B;AACAhB,cAAAA,YAAY,CAACgB,gBAAD,CAAZ;AACAtB,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAMH,GAPD,EAOE,EAPF;;AASA,MAAMuB,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,YAAAA,QADY,GACDrB,GAAG,CAACc,GAAJ,CAAQ,CAAR,EAAW,MAAX,CADC;AAEZQ,YAAAA,MAFY,GAEHtB,GAAG,CAACc,GAAJ,CAAQvB,eAAR,EAAyB,MAAzB,CAFG;AAAA;AAAA,8CAGsB,iCAAa;AAACG,cAAAA,OAAO,EAAPA,OAAD;AAAUK,cAAAA,KAAK,EAAEsB,QAAjB;AAA2BrB,cAAAA,GAAG,EAACsB;AAA/B,aAAb,CAHtB;;AAAA;AAGdH,YAAAA,gBAHc;AAIlBA,YAAAA,gBAAgB,GAAGb,YAAY,CAACa,gBAAD,CAA/B;AACAhB,YAAAA,YAAY,CAAC;AACTJ,cAAAA,KAAK,EAALA,KADS;AAETC,cAAAA,GAAG,EAAEsB,MAFI;AAGTrB,cAAAA,IAAI,EAAEA,IAAI,CAACsB,MAAL,CAAYJ,gBAAgB,CAAClB,IAA7B;AAHG,aAAD,CAAZ;;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAWA,MAAMuB,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AACbH,YAAAA,QADa,GACFtB,KAAK,CAAC0B,QAAN,CAAelC,eAAf,EAAgC,MAAhC,CADE;AAEb+B,YAAAA,MAFa,GAEJvB,KAAK,CAAC0B,QAAN,CAAe,CAAf,EAAkB,MAAlB,CAFI;AAAA;AAAA,8CAGqB,iCAAa;AAAC/B,cAAAA,OAAO,EAAPA,OAAD;AAAUK,cAAAA,KAAK,EAAEsB,QAAjB;AAA2BrB,cAAAA,GAAG,EAACsB;AAA/B,aAAb,CAHrB;;AAAA;AAGfH,YAAAA,gBAHe;AAInBA,YAAAA,gBAAgB,GAAGb,YAAY,CAACa,gBAAD,CAA/B;AACAhB,YAAAA,YAAY,CAAC;AACTJ,cAAAA,KAAK,EAAEsB,QADE;AAETrB,cAAAA,GAAG,EAAHA,GAFS;AAGTC,cAAAA,IAAI,EAAEkB,gBAAgB,CAAClB,IAAjB,CAAsBsB,MAAtB,CAA6BtB,IAA7B;AAHG,aAAD,CAAZ;AAKAI,YAAAA,WAAW,CAAC,UAAAqB,IAAI;AAAA,qBAAIA,IAAI,GAACnC,eAAT;AAAA,aAAL,CAAX;;AAVmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAaA,MAAMoC,MAAM,GAAG,SAATA,MAAS,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACR5B,GAAG,CAACY,IAAJ,CAASb,KAAT,EAAgB,MAAhB,IAA0BP,WADlB;AAAA;AAAA;AAAA;;AAEP,oCAAM,gBAAN;AAFO;;AAAA;AAKXK,YAAAA,UAAU,CAAC,IAAD,CAAV;AACMgC,YAAAA,IANK,GAMED,KAAK,GAAGR,aAAH,GAAmBI,cAN1B;AAOXK,YAAAA,IAAI,GAAGC,IAAP,CAAY;AAAA,qBAAMjC,UAAU,CAAC,KAAD,CAAhB;AAAA,aAAZ;;AAPW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAUA,SACI,6BAAC,yBAAD;AAAc,IAAA,KAAK,EAAEkC,MAAM,CAACpC,KAAD,CAAN,CAAcqC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAC;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,kBAAD;AACI,IAAA,OAAO,EAAErC,OADb;AAEI,IAAA,MAAM,EAAE+B,MAFZ;AAGI,IAAA,QAAQ,EAAEtB;AAHd,KAIQH,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ,EASI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAACgC,MAAAA,IAAI,EAAC;AAAN,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,CAACtC,OAAD,IACA,6BAAC,kBAAD,6BAAeM,SAAS,CAACD,IAAV,CAAeG,QAAf,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHR,CATJ,CADJ;AAkBH;;AAED,IAAM2B,MAAM,GAAG,SAATA,MAAS,CAACpC,KAAD;AAAA,SAAwBwC,wBAAWC,MAAX,CAAkB;AACrDJ,IAAAA,SAAS,EAAE;AACTE,MAAAA,IAAI,EAAE,CADG;AAETG,MAAAA,UAAU,EAAC,SAFF;AAGTC,MAAAA,eAAe,EAAE3C,KAAK,CAAC4C;AAHd;AAD0C,GAAlB,CAAxB;AAAA,CAAf;;eAQe9C,I","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {  GlobalState } from \"@/../App\";\nimport DailyList from \"@/components/DailyList\";\nimport DailyView from \"@/components/DailyView\";\nimport { DefaultTheme } from \"@/style/styled\";\nimport { IDaily, IDailyList } from \"@/utils/data\";\nimport dayjs from \"dayjs\";\nimport { SafeAreaView, View, StyleSheet } from \"react-native\";\nimport { useEffect } from \"react\";\nimport { getDailyList } from \"@/db/UserDailyData\";\nimport { Alert } from \"react-native\";\n\nexport interface HomeProps{\n\n}\n\n// 1회당 가져올 날짜 수\nconst UNIT_FETCH_ONCE = 7;\n// 최대 가져올 날짜 수\nconst FETCH_LIMIT = 35;\nfunction Home({}:HomeProps){\n    const user_id=\"111\";\n    const theme = useSelector(({theme}:GlobalState) => theme);\n    const [loading, setLoading] = useState<Boolean>(true);\n\n    const today = dayjs()\n    const [dailylist, setDailylist] = useState<IDailyList>({\n        start: today,\n        end: today,\n        data: []\n    });\n    const [selected, setSelected] = useState<number>(0);\n    const {start, end, data} = dailylist;\n\n    const fillEmptyDay = (dbData:IDailyList):IDailyList => {\n        const from = dbData.start;\n        const to = dbData.end;\n\n        let idx = 0;\n        for(let i = 0; i<=to.diff(from, 'days'); i++){\n            const date = from.add(i, 'days');\n            if(idx >= dbData.data.length || \n                dbData.data[idx].date.format(\"YYYYMMDD\") != date.format(\"YYYYMMDD\")){\n                dbData.data.splice(idx, 0, {\n                    date,\n                    events: []\n                })\n            }\n            idx++;\n        }\n        return dbData;\n    }\n    useEffect(() => {\n        (async () => {\n            let newDailyListData:IDailyList = await getDailyList({user_id, start, end:today.add(UNIT_FETCH_ONCE-1, 'days')});\n            newDailyListData = fillEmptyDay(newDailyListData);\n            setDailylist(newDailyListData);\n            setLoading(false);\n        })();\n    },[])\n    // 7일치 데이터\n    const loadAfterData = async () => {\n        const newStart = end.add(1, 'days');\n        const newEnd = end.add(UNIT_FETCH_ONCE, 'days');\n        let newDailyListData:IDailyList = await getDailyList({user_id, start: newStart, end:newEnd});\n        newDailyListData = fillEmptyDay(newDailyListData);\n        setDailylist({\n            start,\n            end: newEnd,\n            data: data.concat(newDailyListData.data)\n        });\n    }\n    const loadBeforeData = async () => {\n        const newStart = start.subtract(UNIT_FETCH_ONCE, 'days')\n        const newEnd = start.subtract(1, 'days');\n        let newDailyListData:IDailyList = await getDailyList({user_id, start: newStart, end:newEnd});\n        newDailyListData = fillEmptyDay(newDailyListData);\n        setDailylist({\n            start: newStart,\n            end,\n            data: newDailyListData.data.concat(data)\n        });\n        setSelected(prev => prev+UNIT_FETCH_ONCE);\n    }\n\n    const loader = async (after:boolean) => {\n        if(end.diff(start, 'days') > FETCH_LIMIT){\n            Alert(\"최대 5주까지 가능합니다.\")\n            return;\n        }\n        setLoading(true);\n        const load = after ? loadAfterData : loadBeforeData;\n        load().then(() => setLoading(false));\n    };\n    \n    return(\n        <SafeAreaView style={styles(theme).container}>\n            <View style={{minHeight:140}}>\n                <DailyList\n                    loading={loading}\n                    loader={loader}\n                    selector={setSelected}\n                    {...dailylist}\n                />\n            </View>\n            <View style={{flex:1}}>\n                {\n                    !loading &&\n                    <DailyView {...dailylist.data[selected]}/>\n                }\n            </View>\n        </SafeAreaView>\n    )\n}\n\nconst styles = (theme:DefaultTheme) => StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems:\"stretch\",\n      backgroundColor: theme.mainBackground,\n    },\n});\n\nexport default Home;"]},"metadata":{},"sourceType":"script"}
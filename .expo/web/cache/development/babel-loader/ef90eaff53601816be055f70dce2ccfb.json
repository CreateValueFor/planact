{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectDestructuringEmpty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectDestructuringEmpty\"));\n\nvar _taggedTemplateLiteralLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteralLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _EventView = _interopRequireDefault(require(\"./EventView\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _templateObject,\n    _jsxFileName = \"/Users/sooyoung/Projects/Planact/src/components/Daily.tsx\";\n\nvar DailyContainer = styled.TouchableOpacity(_templateObject || (_templateObject = (0, _taggedTemplateLiteralLoose2.default)([\"\\n    width: 120;\\n    height: 120;\\n    padding: 5px;\\n    padding-top: 3px;\\n    border-radius: 15;\\n    border-width: .2;\\n    shadow-color: #000000;\\n    shadow-opacity: 0.8;\\n    shadow-radius: 2;\\n    elevation: 1;\\n\"])));\n\nfunction Daily(_ref) {\n  (0, _objectDestructuringEmpty2.default)(_ref);\n  var date = daily_dummy.date,\n      events = daily_dummy.events;\n  var theme = useSelector(function (_ref2) {\n    var theme = _ref2.theme;\n    return theme;\n  });\n\n  var _styles = styles(theme, {\n    color: color,\n    disabled: disabled\n  }),\n      container = _styles.container,\n      text = _styles.text;\n\n  return _react.default.createElement(DailyContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(DateText, {\n    style: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, date.getDate()), _react.default.createElement(_EventView.default, (0, _extends2.default)({}, events[0], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })));\n}\n\nvar styles = function styles(theme, _ref3) {\n  var daytype = _ref3.daytype;\n  var text = theme.text;\n  return _reactNative.StyleSheet.create({\n    container: {},\n    datetext: {\n      color: daytype === 0 ? text : daytype === 1 ? 'blue' : 'red',\n      fontWeight: '800',\n      fontSize: 20\n    }\n  });\n};\n\nvar daily_dummy = {\n  date: new Date(),\n  events: [{\n    dateof: 1,\n    title: \"런닝머신 30분\",\n    content: \"9km/h 5분 12km/h 5분 반복\",\n    icon: \"running\",\n    date: new Date(),\n    completed: false,\n    color: \"#9c4646\"\n  }, {\n    dateof: 1,\n    title: \"영단어 100개 암기\",\n    content: \"Toeic 영단어\",\n    icon: \"study\",\n    date: new Date(),\n    completed: false,\n    color: \"#bbbbff\"\n  }]\n};\nvar _default = Daily;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sooyoung/Projects/Planact/src/components/Daily.tsx"],"names":["DailyContainer","styled","TouchableOpacity","Daily","date","daily_dummy","events","theme","useSelector","styles","color","disabled","container","text","getDate","daytype","StyleSheet","create","datetext","fontWeight","fontSize","Date","dateof","title","content","icon","completed"],"mappings":";;;;;;;;;;;;;AAEA;;AACA;;AACA;;;;;AAEA,IAAMA,cAAc,GAAGC,MAAM,CAACC,gBAAV,sTAApB;;AAiBA,SAASC,KAAT,OAAoB;AAAA;AAEhB,MAAOC,IAAP,GAAkCC,WAAlC,CAAOD,IAAP;AAAA,MAAaE,MAAb,GAAkCD,WAAlC,CAAaC,MAAb;AAEA,MAAMC,KAAK,GAAGC,WAAW,CAAC;AAAA,QAAED,KAAF,SAAEA,KAAF;AAAA,WAAsBA,KAAtB;AAAA,GAAD,CAAzB;;AACA,gBAA0BE,MAAM,CAACF,KAAD,EAAQ;AAACG,IAAAA,KAAK,EAALA,KAAD;AAAQC,IAAAA,QAAQ,EAARA;AAAR,GAAR,CAAhC;AAAA,MAAOC,SAAP,WAAOA,SAAP;AAAA,MAAkBC,IAAlB,WAAkBA,IAAlB;;AAEA,SACI,6BAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,QAAD;AAAU,IAAA,KAAK,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,IAAI,CAACU,OAAL,EADL,CADJ,EAII,6BAAC,kBAAD,6BAAeR,MAAM,CAAC,CAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJJ,CADJ;AAQH;;AAMD,IAAMG,MAAM,GAAG,SAATA,MAAS,CAACF,KAAD,SAAmD;AAAA,MAA7BQ,OAA6B,SAA7BA,OAA6B;AAC9D,MAAOF,IAAP,GAAeN,KAAf,CAAOM,IAAP;AACA,SAAOG,wBAAWC,MAAX,CAAkB;AACrBL,IAAAA,SAAS,EAAE,EADU;AAIrBM,IAAAA,QAAQ,EAAE;AACNR,MAAAA,KAAK,EAAEK,OAAO,KAAK,CAAZ,GAAgBF,IAAhB,GAAuBE,OAAO,KAAK,CAAZ,GAAe,MAAf,GAAwB,KADhD;AAENI,MAAAA,UAAU,EAAE,KAFN;AAGNC,MAAAA,QAAQ,EAAE;AAHJ;AAJW,GAAlB,CAAP;AAUH,CAZD;;AAcA,IAAMf,WAAsB,GAAG;AAC3BD,EAAAA,IAAI,EAAE,IAAIiB,IAAJ,EADqB;AAE3Bf,EAAAA,MAAM,EAAC,CACP;AACIgB,IAAAA,MAAM,EAAE,CADZ;AAEIC,IAAAA,KAAK,EAAE,UAFX;AAGIC,IAAAA,OAAO,EAAE,uBAHb;AAIIC,IAAAA,IAAI,EAAE,SAJV;AAKIrB,IAAAA,IAAI,EAAE,IAAIiB,IAAJ,EALV;AAMIK,IAAAA,SAAS,EAAE,KANf;AAOIhB,IAAAA,KAAK,EAAE;AAPX,GADO,EAUP;AACIY,IAAAA,MAAM,EAAE,CADZ;AAEIC,IAAAA,KAAK,EAAE,aAFX;AAGIC,IAAAA,OAAO,EAAE,WAHb;AAIIC,IAAAA,IAAI,EAAE,OAJV;AAKIrB,IAAAA,IAAI,EAAE,IAAIiB,IAAJ,EALV;AAMIK,IAAAA,SAAS,EAAE,KANf;AAOIhB,IAAAA,KAAK,EAAE;AAPX,GAVO;AAFoB,CAA/B;eAwBeP,K","sourcesContent":["import { DailyProps, daytype, User_Event } from '@/utils/data';\nimport { getDayType } from '@/utils/date.js';\nimport React from 'react';\nimport EventView from './EventView';\nimport { StyleSheet, TouchableOpacity, TouchableOpacityProps, Text } from 'react-native'\n\nconst DailyContainer = styled.TouchableOpacity`\n    width: 120;\n    height: 120;\n    padding: 5px;\n    padding-top: 3px;\n    border-radius: 15;\n    border-width: .2;\n    shadow-color: #000000;\n    shadow-opacity: 0.8;\n    shadow-radius: 2;\n    elevation: 1;\n`\n\n\n\n\n\nfunction Daily ({}) {\n    //Dummy Variable\n    const {date, events}:DailyProps = daily_dummy;\n\n    const theme = useSelector(({theme}:AppState) => theme);\n    const {container, text} = styles(theme, {color, disabled});\n    \n    return (\n        <DailyContainer>\n            <DateText style>\n                {date.getDate()}\n            </DateText>\n            <EventView {...events[0]} />\n        </DailyContainer>\n    )\n}\n\ninterface DailyStyleProps {\n    daytype: daytype\n}\n\nconst styles = (theme:DefaultTheme, {daytype}:DailyStyleProps) => {\n    const {text} = theme;\n    return StyleSheet.create({\n        container: {\n\n        },\n        datetext: {\n            color: daytype === 0 ? text : daytype === 1 ?'blue' : 'red',\n            fontWeight: '800',\n            fontSize: 20\n        }\n    })\n}\n\nconst daily_dummy:DailyProps = {\n    date: new Date(),\n    events:[\n    {\n        dateof: 1,\n        title: \"런닝머신 30분\",\n        content: \"9km/h 5분 12km/h 5분 반복\",\n        icon: \"running\",\n        date: new Date(),\n        completed: false,\n        color: \"#9c4646\"\n    },\n    {\n        dateof: 1,\n        title: \"영단어 100개 암기\",\n        content: \"Toeic 영단어\",\n        icon: \"study\",\n        date: new Date(),\n        completed: false,\n        color: \"#bbbbff\"\n    },\n    ]\n}\n\nexport default Daily;"]},"metadata":{},"sourceType":"script"}
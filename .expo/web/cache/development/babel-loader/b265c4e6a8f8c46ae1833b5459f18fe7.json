{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _Daily = _interopRequireDefault(require(\"./Daily\"));\n\nvar _jsxFileName = \"/Users/sooyoung/Projects/Planact/src/components/DailyList.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction DailyList(props) {\n  var _this = this;\n\n  var start = props.start,\n      end = props.end;\n  var dbEvents = props.events;\n  var dailylist = [];\n  var diff = end.diff(start, 'days');\n  console.log(diff);\n  (0, _react.useEffect)(function () {\n    for (var i = 0; i <= diff; i++) {\n      dailylist.push({\n        date: start.add(i, 'days'),\n        events: []\n      });\n    }\n\n    dbEvents && dbEvents.forEach(function (event) {\n      var date = event.date;\n      console.log(date);\n      console.log(date.diff(start, 'days'));\n      dailylist[date.diff(start, 'days')].events.push(event);\n    });\n    console.log(dailylist);\n  }, []);\n  var theme = (0, _reactRedux.useSelector)(function (state) {\n    return state;\n  });\n  return _react.default.createElement(_reactNative.ScrollView, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: true,\n    style: styles(theme).container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, dailylist.map(function (daily) {\n    return _react.default.createElement(_Daily.default, (0, _extends2.default)({}, daily, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }));\n  }));\n}\n\nvar styles = function styles(theme) {\n  var screenWidth = _reactNative.Dimensions.get('window').width;\n\n  return _reactNative.StyleSheet.create({\n    container: {\n      minWidth: screenWidth,\n      padding: 5,\n      backgroundColor: \"#dddddd\"\n    }\n  });\n};\n\nvar _default = DailyList;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sooyoung/Projects/Planact/src/components/DailyList.tsx"],"names":["DailyList","props","start","end","dbEvents","events","dailylist","diff","console","log","i","push","date","add","forEach","event","theme","state","styles","container","map","daily","screenWidth","Dimensions","get","width","StyleSheet","create","minWidth","padding","backgroundColor"],"mappings":";;;;;;;;;AAEA;;AAEA;;AACA;;AAEA;;;;;;;;AAEA,SAASA,SAAT,CAAmBC,KAAnB,EAAyC;AAAA;;AACrC,MAAOC,KAAP,GAAqBD,KAArB,CAAOC,KAAP;AAAA,MAAcC,GAAd,GAAqBF,KAArB,CAAcE,GAAd;AACA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAvB;AAIA,MAAMC,SAAsB,GAAG,EAA/B;AACA,MAAMC,IAAI,GAAGJ,GAAG,CAACI,IAAJ,CAASL,KAAT,EAAgB,MAAhB,CAAb;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,wBAAU,YAAM;AACZ,SAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAEH,IAAlB,EAAwBG,CAAC,EAAzB,EAA4B;AACxBJ,MAAAA,SAAS,CAACK,IAAV,CAAe;AACXC,QAAAA,IAAI,EAAEV,KAAK,CAACW,GAAN,CAAUH,CAAV,EAAa,MAAb,CADK;AAEXL,QAAAA,MAAM,EAAE;AAFG,OAAf;AAIH;;AACDD,IAAAA,QAAQ,IACJA,QAAQ,CAACU,OAAT,CAAkB,UAACC,KAAD,EAAsB;AACpC,UAAMH,IAAI,GAAGG,KAAK,CAACH,IAAnB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACL,IAAL,CAAUL,KAAV,EAAiB,MAAjB,CAAZ;AACAI,MAAAA,SAAS,CAACM,IAAI,CAACL,IAAL,CAAUL,KAAV,EAAiB,MAAjB,CAAD,CAAT,CAAoCG,MAApC,CAA2CM,IAA3C,CAAgDI,KAAhD;AACH,KALD,CADJ;AAOAP,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACH,GAfD,EAeG,EAfH;AAkBA,MAAMU,KAAK,GAAG,6BAAY,UAACC,KAAD;AAAA,WAAoBA,KAApB;AAAA,GAAZ,CAAd;AACA,SACI,6BAAC,uBAAD;AACI,IAAA,UAAU,MADd;AAEI,IAAA,8BAA8B,MAFlC;AAGI,IAAA,KAAK,EAAEC,MAAM,CAACF,KAAD,CAAN,CAAcG,SAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMIb,SAAS,CAACc,GAAV,CAAc,UAACC,KAAD;AAAA,WACV,6BAAC,cAAD,6BAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADU;AAAA,GAAd,CANJ,CADJ;AAaH;;AAED,IAAMH,MAAM,GAAG,SAATA,MAAS,CAACF,KAAD,EAAwB;AACnC,MAAMM,WAAW,GAAGC,wBAAWC,GAAX,CAAe,QAAf,EAAyBC,KAA7C;;AACA,SAAOC,wBAAWC,MAAX,CAAkB;AACrBR,IAAAA,SAAS,EAAC;AACNS,MAAAA,QAAQ,EAAEN,WADJ;AAENO,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,eAAe,EAAE;AAHX;AADW,GAAlB,CAAP;AAOH,CATD;;eAYe9B,S","sourcesContent":["import { DailyListProps, DailyProps, User_Event } from \"@/utils/data\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { AppState, Dimensions, ScrollView, StyleSheet } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { DefaultTheme } from \"styled-components/native\";\nimport Daily from \"./Daily\";\n\nfunction DailyList(props: DailyListProps){\n    const {start, end} = props;\n    const dbEvents = props.events;\n\n    \n    // 최적화 필요!!!\n    const dailylist:DailyProps[] = [];\n    const diff = end.diff(start, 'days');\n    console.log(diff);\n    \n    useEffect(() => {\n        for(let i = 0; i<=diff; i++){\n            dailylist.push({\n                date: start.add(i, 'days'),\n                events: []\n            })\n        }\n        dbEvents &&\n            dbEvents.forEach( (event:User_Event) => {\n                const date = event.date;\n                console.log(date);\n                console.log(date.diff(start, 'days'));\n                dailylist[date.diff(start, 'days')].events.push(event);\n            })\n        console.log(dailylist);\n    }, [])\n    \n\n    const theme = useSelector((state:AppState) => state);\n    return(\n        <ScrollView\n            horizontal\n            showsHorizontalScrollIndicator\n            style={styles(theme).container}\n            >\n        {\n            dailylist.map((daily:DailyProps) => \n                <Daily {...daily} />\n            )\n        }\n        </ScrollView>\n    )\n}\n\nconst styles = (theme:DefaultTheme) => {\n    const screenWidth = Dimensions.get('window').width;\n    return StyleSheet.create({\n        container:{\n            minWidth: screenWidth,\n            padding: 5,\n            backgroundColor: \"#dddddd\"\n        }\n    })\n}\n\n\nexport default DailyList;"]},"metadata":{},"sourceType":"script"}
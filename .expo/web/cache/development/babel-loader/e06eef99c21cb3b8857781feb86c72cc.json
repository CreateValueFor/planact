{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDayType = void 0;\n\nvar _holidayKr = require(\"holiday-kr\");\n\nvar getDayType = function getDayType(date) {\n  var day = date.get(\"day\");\n  if (day === 0 || (0, _holidayKr.isSolarHoliday)(date)) return 2;else return day === 6 ? 1 : 0;\n};\n\nexports.getDayType = getDayType;","map":{"version":3,"sources":["/Users/sooyoung/Projects/Planact/src/utils/date.ts"],"names":["getDayType","date","day","get"],"mappings":";;;;;AAAA;;AAGO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAqB;AAE3C,MAAMC,GAAG,GAAGD,IAAI,CAACE,GAAL,CAAS,KAAT,CAAZ;AACA,MAAGD,GAAG,KAAK,CAAR,IAAa,+BAAeD,IAAf,CAAhB,EACI,OAAO,CAAP,CADJ,KAGI,OAAOC,GAAG,KAAK,CAAR,GAAY,CAAZ,GAAgB,CAAvB;AACP,CAPM","sourcesContent":["import {isSolarHoliday} from 'holiday-kr';\nimport { daytype } from './data';\n\nexport const getDayType = (date:Da):daytype => {\n    // 0 : 평일 , 1: 토요일, 2: 일요일, 공휴일\n    const day = date.get(\"day\") ;\n    if(day === 0 || isSolarHoliday(date))\n        return 2;\n    else\n        return day === 6 ? 1 : 0;\n}"]},"metadata":{},"sourceType":"script"}
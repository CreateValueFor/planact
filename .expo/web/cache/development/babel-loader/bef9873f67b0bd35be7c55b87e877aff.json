{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"/Users/sooyoung/Projects/Planact/src/materials/Button.tsx\";\n\nvar styles = function styles(theme, props) {\n  var _ref = props.color ? theme[props.color] : theme.primary,\n      main = _ref.main,\n      text = _ref.text,\n      border = _ref.border,\n      disabled = _ref.disabled;\n\n  return _reactNative.StyleSheet.create({\n    container: {\n      backgroundColor: main,\n      borderColor: border,\n      opacity: props.disabled ? 0.6 : 1,\n      borderWidth: .5,\n      borderRadius: 5,\n      padding: 10\n    },\n    content: {\n      fontSize: 20,\n      color: text\n    }\n  });\n};\n\nvar Button = function Button(props) {\n  var theme = (0, _reactRedux.useSelector)(function (_ref2) {\n    var theme = _ref2.theme;\n    return theme;\n  });\n\n  var _styles = styles(theme, props),\n      container = _styles.container,\n      content = _styles.content;\n\n  return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({\n    style: container\n  }, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, content));\n};\n\nvar _default = Button;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sooyoung/Projects/Planact/src/materials/Button.tsx"],"names":["styles","theme","props","color","primary","main","text","border","disabled","StyleSheet","create","container","backgroundColor","borderColor","opacity","borderWidth","borderRadius","padding","content","fontSize","Button","others"],"mappings":";;;;;;;;;AAGA;;AACA;;AACA;;;;AAOA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAqBC,KAArB,EAA2C;AACtD,aAAuCA,KAAK,CAACC,KAAN,GAAcF,KAAK,CAACC,KAAK,CAACC,KAAP,CAAnB,GAAmCF,KAAK,CAACG,OAAhF;AAAA,MAAOC,IAAP,QAAOA,IAAP;AAAA,MAAaC,IAAb,QAAaA,IAAb;AAAA,MAAmBC,MAAnB,QAAmBA,MAAnB;AAAA,MAA2BC,QAA3B,QAA2BA,QAA3B;;AACA,SAAOC,wBAAWC,MAAX,CAAkB;AACrBC,IAAAA,SAAS,EAAE;AACPC,MAAAA,eAAe,EAAEP,IADV;AAEPQ,MAAAA,WAAW,EAAEN,MAFN;AAGPO,MAAAA,OAAO,EAAEZ,KAAK,CAACM,QAAN,GAAiB,GAAjB,GAAuB,CAHzB;AAIPO,MAAAA,WAAW,EAAE,EAJN;AAKPC,MAAAA,YAAY,EAAE,CALP;AAMPC,MAAAA,OAAO,EAAE;AANF,KADU;AASrBC,IAAAA,OAAO,EAAC;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJhB,MAAAA,KAAK,EAAEG;AAFH;AATa,GAAlB,CAAP;AAeH,CAjBD;;AAmBA,IAAMc,MAAM,GAAG,SAATA,MAAS,CAASlB,KAAT,EAA2B;AACtC,MAAMD,KAAK,GAAG,6BAAY;AAAA,QAAEA,KAAF,SAAEA,KAAF;AAAA,WAAsBA,KAAtB;AAAA,GAAZ,CAAd;;AACA,gBAA6BD,MAAM,CAACC,KAAD,EAAQC,KAAR,CAAnC;AAAA,MAAOS,SAAP,WAAOA,SAAP;AAAA,MAAkBO,OAAlB,WAAkBA,OAAlB;;AACF,SACE,6BAAC,6BAAD;AAAkB,IAAA,KAAK,EAAEP;AAAzB,KAAwCU,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEH,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,CADF,CADF;AAOD,CAVD;;eAWeE,M","sourcesContent":["\nimport { AppState } from '@/../App';\nimport { DefaultTheme } from '@/style/styled';\nimport React from 'react';\nimport { StyleSheet, TouchableOpacity, TouchableOpacityProps, Text } from 'react-native'\nimport { useSelector } from 'react-redux';\n\ninterface ButtonProps extends TouchableOpacityProps {\n    color?: \"primary\" | \"secondary\" | \"ghost\"\n    disabled?: boolean\n    content: string\n  }\nconst styles = (theme:DefaultTheme, props:ButtonProps) => {\n    const {main, text, border, disabled} = props.color ? theme[props.color] : theme.primary;\n    return StyleSheet.create({\n        container: {\n            backgroundColor: main,\n            borderColor: border,\n            opacity: props.disabled ? 0.6 : 1,\n            borderWidth: .5,\n            borderRadius: 5,\n            padding: 10,\n        },\n        content:{\n            fontSize: 20,\n            color: text\n        },\n\n    })\n}\n\nconst Button = function(props:ButtonProps){\n    const theme = useSelector(({theme}:AppState) => theme);\n    const {container, content} = styles(theme, props);\n  return(\n    <TouchableOpacity style={container} {...others}>\n      <Text style={content}>\n        {content}\n      </Text>\n    </TouchableOpacity>\n  )\n}\nexport default Button;\n"]},"metadata":{},"sourceType":"script"}
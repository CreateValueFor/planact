{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _styleUtil = require(\"../../style/style-util\");\n\nvar _themes = require(\"../../style/themes\");\n\nvar _EventDetails = _interopRequireDefault(require(\"./EventDetails\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\rjqnr\\\\src\\\\planact\\\\src\\\\screens\\\\home\\\\ToggleEventList.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction ToggleEventList(props) {\n  var _this = this;\n\n  var topic = props.topic,\n      color = props.color,\n      events = props.events;\n  var theme = (0, _reactRedux.useSelector)(function (_ref) {\n    var theme = _ref.theme;\n    return theme;\n  });\n\n  var _styles = styles(theme, color),\n      toggleWrapper = _styles.toggleWrapper,\n      toggleButton = _styles.toggleButton,\n      circleContainer = _styles.circleContainer,\n      circle = _styles.circle,\n      toggleText = _styles.toggleText,\n      accentText = _styles.accentText,\n      text = _styles.text;\n\n  var _useState = (0, _react.useState)(true),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var toggleShow = function toggleShow() {\n    return setShow(function (prev) {\n      return !prev;\n    });\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: toggleWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: toggleButton,\n    onPress: toggleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: circleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: circle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: toggleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: accentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, topic + \" \" + events[0].dateof + \"\\uC77C\\uCC28\"))), show && _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, events.map(function (event, idx) {\n    return _react.default.createElement(_EventDetails.default, (0, _extends2.default)({}, event, {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }));\n  })));\n}\n\nvar styles = function styles(theme, color) {\n  var content = theme.content,\n      text = theme.text,\n      border = theme.border;\n  var shadowOption = (0, _themes.isLight)(theme) ? _styleUtil.shadow : {};\n  return _reactNative.StyleSheet.create({\n    toggleWrapper: _objectSpread({\n      marginBottom: 20\n    }, shadowOption),\n    toggleButton: {\n      height: 60,\n      flexDirection: 'row'\n    },\n    circleContainer: {\n      width: 60,\n      padding: 20,\n      backgroundColor: content\n    },\n    circle: {\n      borderRadius: 50,\n      flex: 1,\n      backgroundColor: color\n    },\n    toggleText: {\n      flex: 5,\n      backgroundColor: content,\n      justifyContent: 'center'\n    },\n    accentText: {\n      color: text,\n      fontWeight: '800',\n      fontSize: 16\n    },\n    text: {\n      fontWeight: '800',\n      color: text\n    }\n  });\n};\n\nvar _default = ToggleEventList;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/rjqnr/src/planact/src/screens/home/ToggleEventList.tsx"],"names":["ToggleEventList","props","topic","color","events","theme","styles","toggleWrapper","toggleButton","circleContainer","circle","toggleText","accentText","text","show","setShow","toggleShow","prev","dateof","map","event","idx","content","border","shadowOption","shadow","StyleSheet","create","marginBottom","height","flexDirection","width","padding","backgroundColor","borderRadius","flex","justifyContent","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\r\nimport { GroupedEvent, IUserEvent } from '@/utils/data'\r\nimport { DefaultTheme } from '@/style/styled'\r\nimport { useSelector } from 'react-redux'\r\nimport { GlobalState } from '@/modules'\r\nimport { shadow } from '@/style/style-util'\r\nimport { isLight } from '@/style/themes'\r\nimport { useState } from 'react'\r\nimport EventDetails from './EventDetails'\r\n\r\nfunction ToggleEventList(props: GroupedEvent) {\r\n  const { topic, color, events } = props\r\n\r\n  const theme = useSelector(({ theme }: GlobalState) => theme)\r\n  const {\r\n    toggleWrapper,\r\n    toggleButton,\r\n    circleContainer,\r\n    circle,\r\n    toggleText,\r\n    accentText,\r\n    text,\r\n  } = styles(theme, color)\r\n  const [show, setShow] = useState<boolean>(true)\r\n  const toggleShow = () => setShow((prev) => !prev)\r\n  return (\r\n    <View style={toggleWrapper}>\r\n      <TouchableOpacity style={toggleButton} onPress={toggleShow}>\r\n        <View style={circleContainer}>\r\n          <View style={circle} />\r\n        </View>\r\n        <View style={toggleText}>\r\n          <Text style={accentText}>{`${topic} ${events[0].dateof}일차`}</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n      {show && (\r\n        <View>\r\n          {events.map((event, idx) => (\r\n            <EventDetails {...event} key={idx} />\r\n          ))}\r\n        </View>\r\n      )}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = (theme: DefaultTheme, color: string) => {\r\n  const { content, text, border } = theme\r\n  const shadowOption = isLight(theme) ? shadow : {}\r\n  return StyleSheet.create({\r\n    toggleWrapper: {\r\n      marginBottom: 20,\r\n      ...shadowOption,\r\n    },\r\n    toggleButton: {\r\n      height: 60,\r\n      flexDirection: 'row',\r\n    },\r\n    circleContainer: {\r\n      width: 60,\r\n      padding: 20,\r\n      backgroundColor: content,\r\n    },\r\n    circle: {\r\n      borderRadius: 50,\r\n      flex: 1,\r\n      backgroundColor: color,\r\n    },\r\n    toggleText: {\r\n      flex: 5,\r\n      backgroundColor: content,\r\n      justifyContent: 'center',\r\n    },\r\n    accentText: {\r\n      color: text,\r\n      fontWeight: '800',\r\n      fontSize: 16,\r\n    },\r\n    text: {\r\n      fontWeight: '800',\r\n      color: text,\r\n    },\r\n  })\r\n}\r\n\r\nexport default ToggleEventList\r\n"]},"metadata":{},"sourceType":"script"}
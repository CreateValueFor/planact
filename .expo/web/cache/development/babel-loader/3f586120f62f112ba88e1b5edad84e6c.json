{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _Daily = _interopRequireDefault(require(\"./Daily\"));\n\nvar _jsxFileName = \"/Users/sooyoung/Projects/Planact/src/components/DailyList.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction DailyList(props) {\n  var _this = this;\n\n  var start = props.start,\n      end = props.end,\n      data = props.data,\n      loader = props.loader,\n      loading = props.loading;\n\n  var _useState = (0, _react.useState)(start),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      currentStart = _useState2[0],\n      setCurrentStart = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(end),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      currentEnd = _useState4[0],\n      setCurrentEnd = _useState4[1];\n\n  var theme = (0, _reactRedux.useSelector)(function (state) {\n    return state;\n  });\n\n  var _useState5 = (0, _react.useState)([]),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      dailylist = _useState6[0],\n      setDailyList = _useState6[1];\n\n  var getDailyBoxes = function getDailyBoxes(from, to) {\n    var list = [];\n    var diff = to.diff(from, 'days');\n    var filteredData = data.filter(function (_ref) {\n      var date = _ref.date;\n      return date >= from && date <= to;\n    }).map(function (_ref2) {\n      var date = _ref2.date,\n          events = _ref2.events;\n      return (0, _defineProperty2.default)({}, date.format(\"YYYYMMDD\"), events);\n    });\n\n    for (var i = 0; i <= diff; i++) {\n      var date = from.add(i, 'days');\n      var events = filteredData[date.format(\"YYYYMMDD\")] || [];\n      list.push({\n        date: date,\n        events: events\n      });\n    }\n\n    return list;\n  };\n\n  (0, _react.useEffect)(function () {\n    if (loading) return;\n    var list = getDailyBoxes(start, end);\n    setDailyList(list);\n    setCurrentStart(start);\n    setCurrentEnd(end);\n  }, [loading]);\n  (0, _react.useEffect)(function () {\n    if (start >= currentStart) return;\n    var newDailylist = getDailyBoxes(start, currentStart.subtract(1, 'day'));\n    setDailyList(function (prev) {\n      return newDailylist.concat(prev);\n    });\n    setCurrentStart(start);\n  }, [start]);\n  (0, _react.useEffect)(function () {\n    if (currentEnd >= end || currentStart == currentEnd) return;\n    var newDailylist = getDailyBoxes(currentEnd.add(1, 'day'), end);\n    setDailyList(function (prev) {\n      return prev.concat(newDailylist);\n    });\n    setCurrentEnd(end);\n  }, [end]);\n\n  var _useState7 = (0, _react.useState)(0),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      contentSize = _useState8[0],\n      setContentSize = _useState8[1];\n\n  var getData = function getData(_ref4) {\n    var distanceFromEnd, perc;\n    return _regenerator.default.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            distanceFromEnd = _ref4.distanceFromEnd;\n\n            if (!loading) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 3:\n            perc = distanceFromEnd / contentSize;\n            if (perc < 0.) console.log(props);\n            loader(false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var renderItem = function renderItem(props) {\n    if (loading) return _react.default.createElement(_react.default.Fragment, null);\n    return _react.default.createElement(_Daily.default, (0, _extends2.default)({}, props.item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 16\n      }\n    }));\n  };\n\n  return _react.default.createElement(_reactNative.FlatList, {\n    onContentSizeChange: setContentSize,\n    horizontal: true,\n    showsHorizontalScrollIndicator: true,\n    initialNumToRender: 7,\n    onEndReached: getData,\n    onEndReachedThreshold: 0.99,\n    style: styles(theme).scroll,\n    data: dailylist,\n    keyExtractor: function keyExtractor(item) {\n      return String(item.date.format(\"YYYYMMDD\"));\n    },\n    renderItem: renderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  });\n}\n\nvar styles = function styles(theme) {\n  var screenWidth = _reactNative.Dimensions.get('window').width;\n\n  return _reactNative.StyleSheet.create({\n    scroll: {\n      height: 20,\n      flexDirection: 'row',\n      minWidth: screenWidth,\n      padding: 5,\n      paddingVertical: 15,\n      backgroundColor: \"#fafafa\"\n    }\n  });\n};\n\nvar _default = DailyList;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sooyoung/Projects/Planact/src/components/DailyList.tsx"],"names":["DailyList","props","start","end","data","loader","loading","currentStart","setCurrentStart","currentEnd","setCurrentEnd","theme","state","dailylist","setDailyList","getDailyBoxes","from","to","list","diff","filteredData","filter","date","map","events","format","i","add","push","newDailylist","subtract","prev","concat","contentSize","setContentSize","getData","distanceFromEnd","perc","console","log","renderItem","item","styles","scroll","String","screenWidth","Dimensions","get","width","StyleSheet","create","height","flexDirection","minWidth","padding","paddingVertical","backgroundColor"],"mappings":"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","sourcesContent":["import { GlobalState } from \"@/../App\";\nimport { DailyListProps, DailyProps } from \"@/utils/data\";\nimport { Dayjs } from \"dayjs\";\nimport React from \"react\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Dimensions, FlatList, StyleSheet } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { DefaultTheme } from \"styled-components/native\";\nimport Daily from \"./Daily\";\n\ninterface DailyListComponentProps extends DailyListProps {\n    loading: Boolean;\n    loader: (after:boolean) => Promise<void>;\n}\nfunction DailyList(props: DailyListComponentProps){\n    const {start, end, data, loader, loading} = props;\n    const [currentStart, setCurrentStart] = useState<Dayjs>(start);\n    const [currentEnd, setCurrentEnd] = useState<Dayjs>(end);\n    const theme = useSelector((state:GlobalState) => state);\n    \n    // 최적화 필요!!!\n    const [dailylist, setDailyList] = useState<DailyProps[]>([]);\n    // 추가할 Daily Box의 배열\n    const getDailyBoxes = (from:Dayjs, to:Dayjs):DailyProps[] => {\n        const list:DailyProps[] = [];\n        const diff = to.diff(from, 'days');\n        const filteredData = data\n                                .filter(({date}:DailyProps) => date >= from && date <= to)\n                                .map(({date, events}:DailyProps) => ({[date.format(\"YYYYMMDD\")] : events}));\n        for(let i = 0; i<=diff; i++){\n            const date = from.add(i, 'days');\n            const events = filteredData[date.format(\"YYYYMMDD\")] || [];\n            list.push({date, events});\n        }\n        return list;\n    }\n\n    useEffect(() => {\n        if(loading) return;\n        let list:DailyProps[] = getDailyBoxes(start, end);\n        setDailyList(list);\n        setCurrentStart(start);\n        setCurrentEnd(end);\n    }, [loading])\n\n    useEffect(() => {\n        if(start >= currentStart)\n            return;\n        let newDailylist:DailyProps[] = getDailyBoxes(start, currentStart.subtract(1, 'day'))\n        setDailyList( prev => newDailylist.concat(prev))\n        setCurrentStart(start);\n    }, [start])\n\n    useEffect(() => {\n        if(currentEnd >= end || currentStart == currentEnd)\n            return;\n        let newDailylist:DailyProps[] = getDailyBoxes(currentEnd.add(1, 'day'), end);\n        setDailyList( prev => prev.concat(newDailylist));\n        setCurrentEnd(end);\n    }, [end])\n\n    const [contentSize, setContentSize] = useState<number>(0);\n    const getData = async ({distanceFromEnd}:{distanceFromEnd:number}) => {\n        if(loading) return;\n        const perc = distanceFromEnd / contentSize;\n        if(perc < 0.)\n        console.log(props);\n        loader(false);\n    }\n    const renderItem = (props:any) => {\n        if(loading) return <></>;\n        return <Daily {...props.item} />\n    }\n\n    return(\n        <FlatList\n            onContentSizeChange={setContentSize}\n            horizontal\n            showsHorizontalScrollIndicator\n            initialNumToRender={7}\n            onEndReached={getData}\n            onEndReachedThreshold={0.99}\n            style={styles(theme).scroll}\n            data={dailylist}\n            keyExtractor={(item) => String(item.date.format(\"YYYYMMDD\") )}\n            renderItem={renderItem}\n            />\n    )\n}\n\n\nconst styles = (theme:DefaultTheme) => {\n    const screenWidth = Dimensions.get('window').width;\n    return StyleSheet.create({\n        scroll:{\n            height: 20,\n            flexDirection: 'row',\n            minWidth:screenWidth,\n            padding: 5,\n            paddingVertical: 15,\n            backgroundColor: \"#fafafa\",\n        },\n    })\n}\n\n\nexport default DailyList;"]},"metadata":{},"sourceType":"script"}